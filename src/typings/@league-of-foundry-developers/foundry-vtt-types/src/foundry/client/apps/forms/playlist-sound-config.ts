
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\forms\\playlist-sound-config.d.ts",
      "import type { ConfiguredDocumentClass } from '../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single PlaylistSound document within a parent Playlist.\n   *\n   * @param sound   - The PlaylistSound document being configured\n   * @param options - Additional application rendering options\n   * @typeParam Options - the type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class PlaylistSoundConfig<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends object = PlaylistSoundConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClass<typeof PlaylistSound>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   id: \"track-config\",\n     *   template: \"templates/playlist/edit-track.html\",\n     *   width: 360\n     * });\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n\n    override get title(): string;\n\n    override getData(options?: Partial<Options>): Data | Promise<Data>;\n\n    override activateListeners(html: JQuery): void;\n\n    /**\n     * Auto-populate the track name using the provided filename, if a name is not already set\n     * @internal\n     */\n    protected _onSourceChange(event: JQuery.ChangeEvent): void;\n\n    protected override _updateObject(event: Event, formData: PlaylistSoundConfig.FormData): Promise<unknown>;\n  }\n\n  namespace PlaylistSoundConfig {\n    /**\n     * @typeParam Options - the type of the options object\n     */\n    interface Data<Options extends DocumentSheetOptions = DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClass<typeof PlaylistSound>>, Options> {\n      lvolume: number;\n    }\n\n    interface FormData {\n      description: string;\n      fade: number | null;\n      lvolume: number;\n      name: string;\n      path: string;\n      repeat: boolean;\n    }\n  }\n}\n"
    ]
  