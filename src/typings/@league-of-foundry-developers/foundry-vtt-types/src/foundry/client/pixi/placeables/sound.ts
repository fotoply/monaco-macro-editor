
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\pixi\\placeables\\sound.d.ts",
      "import type { ConfiguredDocumentClassForName } from '../../../../types/helperTypes';\nimport type { DocumentModificationOptions } from '../../../common/abstract/document.mjs';\n\ndeclare global {\n  /**\n   * An AmbientSound is an implementation of PlaceableObject which represents a dynamic audio source within the Scene.\n   */\n  class AmbientSound extends PlaceableObject<InstanceType<ConfiguredDocumentClassForName<'AmbientSound'>>> {\n    constructor(document: InstanceType<ConfiguredDocumentClassForName<'AmbientSound'>>);\n\n    /**\n     * The Sound which manages playback for this AmbientSound effect\n     */\n    sound: Sound | null;\n\n    /**\n     * A SoundSource object which manages the area of effect for this ambient sound\n     */\n    source: SoundSource;\n\n    static override embeddedName: 'AmbientSound';\n\n    /**\n     * Create a Sound used to play this AmbientSound object\n     * @internal\n     */\n    protected _createSound(): Sound | null;\n\n    /**\n     * Is this ambient sound is currently audible based on its hidden state and the darkness level of the Scene?\n     */\n    get isAudible(): boolean;\n\n    override get bounds(): Rectangle;\n\n    /**\n     * The named identified for the source object associated with this ambient sound\n     */\n    get sourceId(): string;\n\n    /**\n     * A convenience accessor for the sound radius in pixels\n     */\n    get radius(): number;\n\n    /**\n     * Toggle playback of the sound depending on whether or not it is audible\n     * @param isAudible - Is the sound audible?\n     * @param volume    - The target playback volume\n     * @param options   - Additional options which affect sound synchronization\n     */\n    sync(isAudible: boolean, volume: number, options?: Partial<AmbientSound.SyncOptions>): void;\n\n    override clear(): this;\n\n    override draw(): Promise<this>;\n\n    override destroy(options?: Parameters<PlaceableObject['destroy']>[0]): void;\n\n    /**\n     * Draw the graphical preview of the audio source area of effect\n     * @internal\n     */\n    drawField(): PIXI.Container;\n\n    /**\n     * Draw the ControlIcon for the AmbientLight\n     * @internal\n     */\n    protected _drawControlIcon(): ControlIcon;\n\n    override refresh(): this;\n\n    /**\n     * Refresh the display of the ControlIcon for this AmbientSound source\n     */\n    refreshControl(): void;\n\n    /**\n     * Compute the field-of-vision for an object, determining its effective line-of-sight and field-of-vision polygons\n     * @param options - (default: `{}`)\n     */\n    updateSource(options?: AmbientSound.UpdateSourceOptions | undefined): void;\n\n    protected override _onCreate(\n      data: foundry.data.AmbientSoundData['_source'],\n      options: DocumentModificationOptions,\n      userId: string\n    ): void;\n\n    protected override _onUpdate(\n      changed: DeepPartial<foundry.data.AmbientSoundData['_source']>,\n      options?: DocumentModificationOptions,\n      userId?: string\n    ): void;\n\n    protected override _onDelete(...args: Parameters<PlaceableObject['_onDelete']>): void;\n\n    protected override _canHUD(user: InstanceType<ConfiguredDocumentClassForName<'User'>>, event?: any): boolean;\n\n    protected override _canConfigure(user: InstanceType<ConfiguredDocumentClassForName<'User'>>, event?: any): boolean;\n\n    protected override _onClickRight(event: PIXI.InteractionEvent): void;\n\n    protected override _onDragLeftMove(event: PIXI.InteractionEvent): void;\n  }\n\n  namespace AmbientSound {\n    interface SyncOptions {\n      /**\n       * A duration in milliseconds to fade volume transition\n       * @defaultValue `250`\n       */\n      fade: number;\n    }\n\n    interface UpdateSourceOptions {\n      /**\n       * Defer refreshing the SoundsLayer to manually call that refresh later.\n       * @defaultValue `false`\n       */\n      defer?: boolean | undefined;\n\n      /**\n       * Indicate that this SoundSource has been deleted.\n       * @defaultValue `false`\n       */\n      deleted?: boolean | undefined;\n    }\n  }\n}\n"
    ]
  