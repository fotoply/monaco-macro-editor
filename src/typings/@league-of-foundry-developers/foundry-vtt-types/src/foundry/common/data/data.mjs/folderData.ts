
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\folderData.d.ts",
      "import { ConfiguredDocumentClass, ConfiguredFlags, PropertiesToSource } from '../../../../types/helperTypes';\nimport DocumentData from '../../abstract/data.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\n\ninterface FolderDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  name: fields.RequiredString;\n  type: DocumentField<foundry.CONST.FOLDER_DOCUMENT_TYPES> & {\n    type: String;\n    required: true;\n    validate: (t: unknown) => t is foundry.CONST.FOLDER_DOCUMENT_TYPES;\n    validationError: 'Invalid Folder type provided';\n  };\n  description: fields.StringField;\n  parent: fields.ForeignDocumentField<{ type: typeof documents.BaseFolder }>;\n  sorting: DocumentField<SortingModes> & {\n    type: String;\n    required: true;\n    default: 'a';\n    validate: (mode: unknown) => mode is SortingModes;\n    validationError: 'Invalid Folder sorting mode';\n  };\n  sort: fields.IntegerSortField;\n  color: fields.ColorField;\n  flags: fields.ObjectField;\n}\n\ninterface FolderDataProperties {\n  /**\n   * The _id which uniquely identifies this Folder document\n   * @defaultValue `null`\n   */\n  _id: string | null;\n\n  /**\n   * The name of this Folder\n   */\n  name: string;\n\n  /**\n   * The document type which this Folder contains, from CONST.FOLDER_DOCUMENT_TYPES\n   */\n  type: foundry.CONST.FOLDER_DOCUMENT_TYPES;\n\n  /**\n   * An HTML description of the contents of this folder\n   */\n  description?: string | undefined;\n\n  /**\n   * The _id of a parent Folder which contains this Folder\n   * @defaultValue `null`\n   */\n  parent: string | null;\n\n  /**\n   * The sorting mode used to organize documents within this Folder, in [\"a\", \"m\"]\n   * @defaultValue `'a'`\n   */\n  sorting: SortingModes;\n\n  /**\n   * The numeric sort value which orders this Folder relative to its siblings\n   * @defaultValue `0`\n   */\n  sort: number;\n\n  /**\n   * A color string used for the background color of this Folder\n   */\n  color: string | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'Folder'>;\n}\n\ninterface FolderDataConstructorData {\n  /**\n   * The _id which uniquely identifies this Folder document\n   * @defaultValue `null`\n   */\n  _id?: string | null | undefined;\n\n  /**\n   * The name of this Folder\n   */\n  name: string;\n\n  /**\n   * The document type which this Folder contains, from CONST.FOLDER_DOCUMENT_TYPES\n   */\n  type: foundry.CONST.FOLDER_DOCUMENT_TYPES;\n\n  /**\n   * An HTML description of the contents of this folder\n   */\n  description?: string | null | undefined;\n\n  /**\n   * The _id of a parent Folder which contains this Folder\n   * @defaultValue `null`\n   */\n  parent?: InstanceType<ConfiguredDocumentClass<typeof foundry.documents.BaseFolder>> | string | null | undefined;\n\n  /**\n   * The sorting mode used to organize documents within this Folder, in [\"a\", \"m\"]\n   * @defaultValue `'a'`\n   */\n  sorting?: SortingModes | null | undefined;\n\n  /**\n   * The numeric sort value which orders this Folder relative to its siblings\n   * @defaultValue `0`\n   */\n  sort?: number | null | undefined;\n\n  /**\n   * A color string used for the background color of this Folder\n   */\n  color?: string | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'Folder'> | null | undefined;\n}\n\ntype FolderDataSource = PropertiesToSource<FolderDataProperties>;\n\n/**\n * The data schema for a Folder document.\n */\nexport class FolderData extends DocumentData<\n  FolderDataSchema,\n  FolderDataProperties,\n  FolderDataSource,\n  FolderDataConstructorData,\n  documents.BaseFolder\n> {\n  constructor(data: FolderDataConstructorData, document?: documents.BaseFolder | null);\n\n  static override defineSchema(): FolderDataSchema;\n\n  static SORTING_MODES: ['a', 'm'];\n}\n\nexport type SortingModes = ValueOf<typeof FolderData.SORTING_MODES>;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface FolderData extends FolderDataProperties {}\n"
    ]
  