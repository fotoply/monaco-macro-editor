
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\tableResultData.d.ts",
      "import { ConfiguredFlags, PropertiesToSource } from '../../../../types/helperTypes';\nimport DocumentData from '../../abstract/data.mjs';\nimport { BaseTableResult } from '../../documents.mjs';\nimport { fields } from '../module.mjs';\n\ninterface TableResultDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  type: DocumentField<foundry.CONST.TABLE_RESULT_TYPES> & {\n    type: typeof Number;\n    default: typeof foundry.CONST.TABLE_RESULT_TYPES.TEXT;\n    validate: (t: unknown) => t is foundry.CONST.TABLE_RESULT_TYPES;\n    validationError: 'Invalid TableResult type provided';\n  };\n  text: fields.BlankString;\n  img: fields.ImageField;\n  collection: fields.StringField;\n  resultId: fields.StringField;\n  weight: fields.PositiveIntegerField;\n  range: DocumentField<[number, number]> & {\n    type: [typeof Number];\n    required: true;\n    default: [];\n    validate: typeof _isValidResultRange;\n    validationError: 'Invalid TableResult range which must be a length-2 array of ascending integers';\n  };\n  drawn: fields.BooleanField;\n  flags: fields.ObjectField;\n}\n\n/**\n * Validate whether a table result has a valid result range.\n * @internal\n * @param range - The proposed result range\n * @returns Is the range valid?\n */\ndeclare function _isValidResultRange(range: unknown): range is [number, number];\n\ninterface TableResultDataProperties {\n  /**\n   * The _id which uniquely identifies this TableResult embedded document\n   * @defaultValue `null`\n   */\n  _id: string | null;\n\n  /**\n   * A result sub-type from CONST.TABLE_RESULT_TYPES\n   * @defaultValue `CONST.TABLE_RESULT_TYPES.TEXT`\n   */\n  type: foundry.CONST.TABLE_RESULT_TYPES;\n\n  /**\n   * The text which describes the table result\n   * @defaultValue `\"\"`\n   */\n  text: string;\n\n  /**\n   * An image file url that represents the table result\n   */\n  img: string | null | undefined;\n\n  /**\n   * A named collection from which this result is drawn\n   */\n  collection: string | undefined;\n\n  /**\n   * The _id of a Document within the collection this result references\n   */\n  resultId: string | undefined;\n\n  /**\n   * The probabilistic weight of this result relative to other results\n   */\n  weight: number | undefined;\n\n  /**\n   * A length 2 array of ascending integers which defines the range of dice roll\n   * totals which produce this drawn result\n   */\n  range: [number, number];\n\n  /**\n   * Has this result already been drawn (without replacement)\n   * @defaultValue `false`\n   */\n  drawn: boolean;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'TableResult'>;\n}\n\ninterface TableResultDataConstructorData {\n  /**\n   * The _id which uniquely identifies this TableResult embedded document\n   * @defaultValue `null`\n   */\n  _id?: string | null | undefined;\n\n  /**\n   * A result sub-type from CONST.TABLE_RESULT_TYPES\n   * @defaultValue `CONST.TABLE_RESULT_TYPES.TEXT`\n   */\n  type?: foundry.CONST.TABLE_RESULT_TYPES | null | undefined;\n\n  /**\n   * The text which describes the table result\n   * @defaultValue `\"\"`\n   */\n  text?: string | null | undefined;\n\n  /**\n   * An image file url that represents the table result\n   */\n  img?: string | null | undefined;\n\n  /**\n   * A named collection from which this result is drawn\n   */\n  collection?: string | null | undefined;\n\n  /**\n   * The _id of a Document within the collection this result references\n   */\n  resultId?: string | null | undefined;\n\n  /**\n   * The probabilistic weight of this result relative to other results\n   */\n  weight?: number | null | undefined;\n\n  /**\n   * A length 2 array of ascending integers which defines the range of dice roll\n   * totals which produce this drawn result\n   */\n  range: [number, number];\n\n  /**\n   * Has this result already been drawn (without replacement)\n   * @defaultValue `false`\n   */\n  drawn?: boolean | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'TableResult'> | null | undefined;\n}\n\ntype TableResultDataSource = PropertiesToSource<TableResultDataProperties>;\n\nexport class TableResultData extends DocumentData<\n  TableResultDataSchema,\n  TableResultDataProperties,\n  TableResultDataSource,\n  TableResultDataConstructorData,\n  BaseTableResult\n> {\n  static override defineSchema(): TableResultDataSchema;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport declare interface TableResultData extends TableResultDataProperties {}\n"
    ]
  