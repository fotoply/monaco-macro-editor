
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\ambientLightData.d.ts",
      "import { ConfiguredFlags, FieldReturnType, PropertiesToSource } from '../../../../types/helperTypes';\nimport { DocumentData } from '../../abstract/module.mjs';\nimport { BaseAmbientLight } from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\nimport type { LightData, LightDataConstructorData } from './lightData';\n\ninterface AmbientLightDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  x: fields.RequiredNumber;\n  y: fields.RequiredNumber;\n  rotation: FieldReturnType<fields.AngleField, { default: 0 }>;\n  walls: FieldReturnType<fields.BooleanField, { default: true }>;\n  vision: fields.BooleanField;\n  config: DocumentField<LightData> & {\n    type: typeof LightData;\n    required: true;\n    default: Record<string, never>;\n  };\n  hidden: fields.BooleanField;\n  flags: fields.ObjectField;\n}\n\ninterface AmbientLightDataProperties {\n  /**\n   * The _id which uniquely identifies this BaseAmbientLight embedded document\n   */\n  _id: string | null;\n\n  /**\n   * The x-coordinate position of the origin of the light\n   * @defaultValue `0`\n   */\n  x: number;\n\n  /**\n   * The y-coordinate position of the origin of the light\n   * @defaultValue `0`\n   */\n  y: number;\n\n  /**\n   * The angle of rotation for the tile between 0 and 360\n   * @defaultValue `0`\n   */\n  rotation: number;\n\n  /**\n   * Whether or not this light source is constrained by Walls\n   * @defaultValue `true`\n   */\n  walls: boolean;\n\n  /**\n   * Whether or not this light source provides a source of vision\n   * @defaultValue `false`\n   */\n  vision: boolean;\n\n  /**\n   * Light configuration data\n   * @defaultValue `new LightData({})`\n   */\n  config: LightData;\n\n  /**\n   * Is the light source currently hidden?\n   * @defaultValue `false`\n   */\n  hidden: boolean;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'AmbientLight'>;\n}\n\ninterface AmbientLightDataConstructorData {\n  /**\n   * The _id which uniquely identifies this BaseAmbientLight embedded document\n   */\n  _id?: string | null | undefined;\n\n  /**\n   * The x-coordinate position of the origin of the light\n   * @defaultValue `0`\n   */\n  x?: number | null | undefined;\n\n  /**\n   * The y-coordinate position of the origin of the light\n   * @defaultValue `0`\n   */\n  y?: number | null | undefined;\n\n  /**\n   * The angle of rotation for the tile between 0 and 360\n   * @defaultValue `0`\n   */\n  rotation?: number | null | undefined;\n\n  /**\n   * Whether or not this light source is constrained by Walls\n   * @defaultValue `true`\n   */\n  walls?: boolean | null | undefined;\n\n  /**\n   * Whether or not this light source provides a source of vision\n   * @defaultValue `false`\n   */\n  vision?: boolean | null | undefined;\n\n  /**\n   * Light configuration data\n   * @defaultValue `new LightData({})`\n   */\n  config?: LightDataConstructorData | null | undefined;\n\n  /**\n   * Is the light source currently hidden?\n   * @defaultValue `false`\n   */\n  hidden?: boolean | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'AmbientLight'> | null | undefined;\n}\n\ntype AmbientLightDataSource = PropertiesToSource<AmbientLightDataProperties>;\n\n/**\n * The data schema for a AmbientLight embedded document.\n * @see BaseAmbientLight\n */\nexport class AmbientLightData extends DocumentData<\n  AmbientLightDataSchema,\n  AmbientLightDataProperties,\n  AmbientLightDataSource,\n  AmbientLightDataConstructorData,\n  BaseAmbientLight\n> {\n  static override defineSchema(): AmbientLightDataSchema;\n\n  override _initializeSource(data: AmbientLightDataConstructorData): AmbientLightDataSource;\n\n  protected override _initialize(): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AmbientLightData extends AmbientLightDataProperties {}\n"
    ]
  