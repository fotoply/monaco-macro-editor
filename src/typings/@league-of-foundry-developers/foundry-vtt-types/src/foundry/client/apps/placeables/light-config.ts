
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\placeables\\light-config.d.ts",
      "import type { ConfiguredDocumentClassForName } from '../../../../types/helperTypes';\nimport type { AmbientLightDataConstructorData } from '../../../common/data/data.mjs/ambientLightData';\nimport type { AnimationDataConstructorData } from '../../../common/data/data.mjs/animationData';\nimport type { DarknessActivationConstructorData } from '../../../common/data/data.mjs/darknessActivation';\nimport type { LightDataConstructorData } from '../../../common/data/data.mjs/lightData';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single AmbientLight document within a parent Scene.\n   * @typeParam Options - the type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class AmbientLightConfig<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends object = AmbientLightConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'AmbientLight'>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   id: \"ambient-light-config\",\n     *   classes: [\"sheet\", \"ambient-light-config\"],\n     *   title: \"LIGHT.ConfigTitle\",\n     *   template: \"templates/scene/ambient-light-config.html\",\n     *   width: 480,\n     *   height: \"auto\",\n     *   tabs: [{navSelector: \".tabs\", contentSelector: \"form\", initial: \"basic\"}]\n     * });\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n\n    override getData(options?: Partial<Options>): Data | Promise<Data>;\n\n    override close(options?: Application.CloseOptions): Promise<void>;\n\n    override activateListeners(html: JQuery): void;\n\n    /**\n     * Preview the change caused by a change on the form by refreshing the display of the light source\n     */\n    protected _onChangeInput(event: JQuery.ChangeEvent): Promise<void>;\n\n    protected _onResetForm(event: PointerEvent): void;\n\n    protected override _onChangeTab(event: MouseEvent | null, tabs: Tabs, active: string): void;\n\n    protected override _updateObject(event: Event, formData: AmbientLightConfig.FormData): Promise<unknown>;\n\n    /**\n     * Refresh the display of the AmbientLight object\n     * @internal\n     */\n    protected _refresh(): void;\n  }\n\n  namespace AmbientLightConfig {\n    interface Data<Options extends DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'AmbientLight'>>, Options> {\n      isAdvanced: boolean;\n      colorationTechniques: typeof AdaptiveLightingShader.COLORATION_TECHNIQUES;\n      lightAnimations: Record<string, string> & {\n        '': 'None';\n      };\n      submitText: string;\n    }\n\n    interface FormData extends Pick<AmbientLightDataConstructorData, 'x' | 'y' | 'rotation' | 'walls' | 'vision'> {\n      'config.dim': LightDataConstructorData['dim'];\n      'config.bright': LightDataConstructorData['bright'];\n      'config.angle': LightDataConstructorData['angle'];\n      'config.color': LightDataConstructorData['color'];\n      'config.alpha': LightDataConstructorData['alpha'];\n      'config.darkness.min': DarknessActivationConstructorData['min'];\n      'config.darkness.max': DarknessActivationConstructorData['max'];\n      'config.animation.type': AnimationDataConstructorData['type'];\n      'config.animation.speed': AnimationDataConstructorData['speed'];\n      'config.animation.reverse': AnimationDataConstructorData['reverse'];\n      'config.animation.intensity': AnimationDataConstructorData['intensity'];\n      'config.coloration': LightDataConstructorData['coloration'];\n      'config.luminosity': LightDataConstructorData['luminosity'];\n      'config.gradual': LightDataConstructorData['gradual'];\n      'config.saturation': LightDataConstructorData['saturation'];\n      'config.contrast': LightDataConstructorData['contrast'];\n      'config.shadows': LightDataConstructorData['shadows'];\n    }\n  }\n\n  /**\n   * @deprecated since v9\n   */\n  class LightConfig extends AmbientLightConfig {\n    constructor(...args: ConstructorParameters<typeof AmbientLightConfig>);\n  }\n}\n"
    ]
  