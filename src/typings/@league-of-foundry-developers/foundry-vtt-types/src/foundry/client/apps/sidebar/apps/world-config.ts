
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\sidebar\\apps\\world-config.d.ts",
      "interface WorldConfigOptions extends FormApplicationOptions {\n  /**\n   * Whether the world is being created or updated.\n   * @defaultValue `false`\n   */\n  create: boolean;\n\n  inWorld?: boolean | undefined;\n}\n\n/**\n * The World Management setup application\n * @typeParam Options - The type of the options object\n * @typeParam Data    - The data structure used to render the handlebars template.\n */\ndeclare class WorldConfig<\n  Options extends WorldConfigOptions = WorldConfigOptions,\n  Data extends object = WorldConfig.Data\n> extends FormApplication<Options, Data, Game.WorldData<foundry.packages.WorldData>> {\n  /**\n   * @defaultValue\n   * ```typescript\n   * foundry.utils.mergeObject(super.defaultOptions, {\n   *   id: \"world-config\",\n   *   template: \"templates/sidebar/apps/world-config.html\",\n   *   width: 600,\n   *   height: \"auto\",\n   *   create: false,\n   * })\n   * ```\n   */\n  static override get defaultOptions(): WorldConfigOptions;\n\n  static WORLD_KB_URL: 'https://foundryvtt.com/article/game-worlds/';\n\n  override get title(): string;\n\n  override activateListeners(html: JQuery): void;\n\n  override getData(options?: Partial<Options>): Data | Promise<Data>;\n\n  /**\n   * @remarks This method returns `Promise<void>`.\n   */\n  protected override _onSubmit(event: Event): Promise<any>;\n\n  /**\n   * @remarks This method does not exist on WorldConfig and only exists to make the typescript compile!\n   */\n  protected _updateObject(...args: unknown[]): Promise<unknown>;\n\n  /**\n   * Update the world name placeholder when the title is changed.\n   * @internal\n   */\n  protected _onTitleChange(event: JQuery.TriggeredEvent): void;\n\n  override activateEditor(\n    name: string,\n    options?: TextEditor.Options | undefined,\n    initialContent?: string | undefined\n  ): void;\n}\n\ndeclare namespace WorldConfig {\n  interface Data {\n    world: Game.WorldData<foundry.packages.WorldData>;\n    isCreate: boolean;\n    submitText: string;\n    nextDate: string;\n    nextTime: string;\n    worldKbUrl: typeof WorldConfig['WORLD_KB_URL'];\n    inWorld: boolean;\n    showEditFields: boolean;\n    systems?: Game.SystemData<foundry.packages.SystemData>[];\n  }\n}\n"
    ]
  