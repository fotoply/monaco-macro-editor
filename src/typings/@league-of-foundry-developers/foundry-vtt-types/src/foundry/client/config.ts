
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\config.d.ts",
      "import { DocumentConstructor, PlaceableObjectConstructor } from '../../types/helperTypes';\nimport type { StatusEffect } from './data/documents/token';\n\ndeclare global {\n  /**\n   * Runtime configuration settings for Foundry VTT which exposes a large number of variables which determine how\n   * aspects of the software behaves.\n   *\n   * Unlike the CONST analog which is frozen and immutable, the CONFIG object may be updated during the course of a\n   * session or modified by system and module developers to adjust how the application behaves.\n   */\n  interface CONFIG {\n    /**\n     * Configure debugging flags to display additional information\n     */\n    debug: {\n      /** @defaultValue `false` */\n      dice: boolean;\n\n      /** @defaultValue `false` */\n      documents: boolean;\n\n      /** @defaultValue `false` */\n      fog: boolean;\n\n      /** @defaultValue `false` */\n      hooks: boolean;\n\n      /** @defaultValue `false` */\n      av: boolean;\n\n      /** @defaultValue `false` */\n      avclient: boolean;\n\n      /** @defaultValue `false` */\n      mouseInteraction: boolean;\n\n      /** @defaultValue `false` */\n      time: boolean;\n\n      /** @defaultValue `false` */\n      keybindings: boolean;\n\n      /** @defaultValue `false` */\n      polygons: boolean;\n\n      /** @defaultValue `false` */\n      gamepad: boolean;\n    };\n\n    /**\n     * Configure the DatabaseBackend used to perform Document operations\n     * @defaultValue `new ClientDatabaseBackend()`\n     */\n    DatabaseBackend: ClientDatabaseBackend;\n\n    /**\n     * Configuration for the Actor document\n     */\n    Actor: {\n      /** @defaultValue `Actor` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Actor>;\n\n      /** @defaultValue `Actors` */\n      collection: ConstructorOf<Actors>;\n\n      /** @defaultValue `'fas fa-user'` */\n      sidebarIcon: string;\n\n      /** @defaultValue `{}` */\n      typeLabels: Record<string, string>;\n    };\n\n    /**\n     * Configuration for the Adventure document.\n     * Currently for internal use only.\n     * @internal\n     */\n    Adventure: {\n      /** @defaultValue `foundry.documents.BaseAdventure` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof foundry.documents.BaseAdventure>;\n    };\n\n    /**\n     * Configuration for the Cards primary Document type\n     */\n    Cards: {\n      /** @defaultValue `CardStacks` */\n      collection: ConstructorOf<CardStacks>;\n\n      /** @defaultValue `Cards` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Cards>;\n\n      /** @defaultValue `\"fas fa-id-badge\"` */\n      sidebarIcon: string;\n\n      /**\n       * @defaultValue\n       * ```typescript\n       * {\n       *    pokerDark: {\n       *      type: \"deck\",\n       *      label: \"CARDS.DeckPresetPokerDark\",\n       *      src: \"cards/poker-deck-dark.json\"\n       *    },\n       *    pokerLight: {\n       *      type: \"deck\",\n       *      label: \"CARDS.DeckPresetPokerLight\",\n       *      src: \"cards/poker-deck-light.json\"\n       *    }\n       * }\n       * ```\n       */\n      presets: Record<string, CONFIG.Cards.Preset>;\n    };\n\n    /**\n     * Configuration for the ChatMessage document\n     */\n    ChatMessage: {\n      /** @defaultValue `ChatMessage` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof ChatMessage>;\n\n      /** @defaultValue `Messages` */\n      collection: ConstructorOf<Messages>;\n\n      /** @defaultValue `'templates/sidebar/chat-message.html'` */\n      template: string;\n\n      /** @defaultValue `'fas fa-comments'` */\n      sidebarIcon: string;\n\n      /** @defaultValue `100` */\n      batchSize: number;\n    };\n\n    /**\n     * Configuration for the Combat document\n     */\n    Combat: {\n      /** @defaultValue `Combat` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Combat>;\n\n      /** @defaultValue `CombatEncounters` */\n      collection: ConstructorOf<CombatEncounters>;\n\n      /** @defaultValue `'dead'` */\n      defeatedStatusId: string;\n\n      /** @defaultValue `'fas fa-fist-raised'` */\n      sidebarIcon: string;\n\n      initiative: {\n        /** @defaultValue `null` */\n        formula: string | null;\n\n        /** @defaultValue `2` */\n        decimals: number;\n      };\n    };\n\n    /**\n     * Configuration for dice rolling behaviors in the Foundry VTT client\n     */\n    Dice: {\n      /** @defaultValue `[Die, FateDie]` */\n      types: Array<ConstructorOf<DiceTerm>>;\n\n      rollModes: CONFIG.Dice.RollModes;\n\n      /** @defaultValue `[Roll]` */\n      rolls: Array<ConstructorOf<Roll>>;\n\n      /**\n       * @defaultValue\n       * ```typescript\n       * {\n       *   DiceTerm: typeof DiceTerm,\n       *   MathTerm: typeof MathTerm,\n       *   NumericTerm: typeof NumericTerm,\n       *   OperatorTerm: typeof OperatorTerm,\n       *   ParentheticalTerm: typeof ParentheticalTerm,\n       *   PoolTerm: typeof PoolTerm,\n       *   StringTerm: typeof StringTerm\n       * }\n       * ```\n       */\n      termTypes: Record<string, ConstructorOf<RollTerm>>;\n\n      terms: {\n        c: typeof Coin;\n        d: typeof Die;\n        f: typeof FateDie;\n      } & Record<string, ConstructorOf<DiceTerm>>;\n\n      /** @defaultValue `MersenneTwister.random` */\n      randomUniform: () => number;\n    };\n\n    /**\n     * Configuration for the FogExploration document\n     */\n    FogExploration: {\n      /** @defaultValue `FogExploration` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof FogExploration>;\n\n      /** @defaultValue `FogExplorations` */\n      collection: ConstructorOf<FogExplorations>;\n    };\n\n    /**\n     * Configuration for the Folder entity\n     */\n    Folder: {\n      /** @defaultValue `Folder` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Folder>;\n\n      /** @defaultValue `Folders` */\n      collection: ConstructorOf<Folders>;\n\n      /** @defaultValue `'fas fa-folder'` */\n      sidebarIcon: string;\n    };\n\n    /**\n     * Configuration for the default Item entity class\n     */\n    Item: {\n      /** @defaultValue `Item` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Item>;\n\n      /** @defaultValue `Items` */\n      collection: ConstructorOf<Items>;\n\n      /** @defaultValue `'fas fa-suitcase'` */\n      sidebarIcon: string;\n\n      /** @defaultValue `{}` */\n      typeLabels: Record<string, string>;\n    };\n\n    /**\n     * Configuration for the JournalEntry entity\n     */\n    JournalEntry: {\n      /** @defaultValue `JournalEntry` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof JournalEntry>;\n\n      /** @defaultValue `Journal` */\n      collection: ConstructorOf<Journal>;\n\n      noteIcons: {\n        /** @defaultValue `'icons/svg/anchor.svg'` */\n        Anchor: string;\n\n        /** @defaultValue `'icons/svg/barrel.svg'` */\n        Barrel: string;\n\n        /** @defaultValue `'icons/svg/book.svg'` */\n        Book: string;\n\n        /** @defaultValue `'icons/svg/bridge.svg'` */\n        Bridge: string;\n\n        /** @defaultValue `'icons/svg/cave.svg'` */\n        Cave: string;\n\n        /** @defaultValue `'icons/svg/castle.svg` */\n        Castle: string;\n\n        /** @defaultValue `'icons/svg/chest.svg'` */\n        Chest: string;\n\n        /** @defaultValue `'icons/svg/city.svg'` */\n        City: string;\n\n        /** @defaultValue `'icons/svg/coins.svg'` */\n        Coins: string;\n\n        /** @defaultValue `'icons/svg/fire.svg'` */\n        Fire: string;\n\n        /** @defaultValue `'icons/svg/hanging-sign.svg'` */\n        'Hanging Sign': string;\n\n        /** @defaultValue `'icons/svg/house.svg'` */\n        House: string;\n\n        /** @defaultValue `'icons/svg/mountain.svg'` */\n        Mountain: string;\n\n        /** @defaultValue `'icons/svg/oak.svg'` */\n        'Oak Tree': string;\n\n        /** @defaultValue `'icons/svg/obelisk.svg'` */\n        Obelisk: string;\n\n        /** @defaultValue `'icons/svg/pawprint.svg'` */\n        Pawprint: string;\n\n        /** @defaultValue `'icons/svg/ruins.svg'` */\n        Ruins: string;\n\n        /** @defaultValue `'icons/svg/tankard.svg'` */\n        Tankard: string;\n\n        /** @defaultValue `'icons/svg/temple.svg'` */\n        Temple: string;\n\n        /** @defaultValue `'icons/svg/tower.svg'` */\n        Tower: string;\n\n        /** @defaultValue `'icons/svg/trap.svg'` */\n        Trap: string;\n\n        /** @defaultValue `'icons/svg/skull.svg'` */\n        Skull: string;\n\n        /** @defaultValue `'icons/svg/statue.svg'` */\n        Statue: string;\n\n        /** @defaultValue `'icons/svg/sword.svg'` */\n        Sword: string;\n\n        /** @defaultValue `'icons/svg/village.svg'` */\n        Village: string;\n\n        /** @defaultValue `'icons/svg/waterfall.svg'` */\n        Waterfall: string;\n\n        /** @defaultValue `'icons/svg/windmill.svg'` */\n        Windmill: string;\n      } & Record<string, string>;\n\n      /** @defaultValue `'fas fa-book-open'` */\n      sidebarIcon: string;\n    };\n\n    /**\n     * Configuration for the Macro entity\n     */\n    Macro: {\n      /** @defaultValue `Macro` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Macro>;\n\n      /** @defaultValue `Macros` */\n      collection: ConstructorOf<Macros>;\n\n      /** @defaultValue `'fas fa-code'` */\n      sidebarIcon: string;\n    };\n\n    /**\n     * Configuration for the default Playlist entity class\n     */\n    Playlist: {\n      /** @defaultValue `Playlist` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Playlist>;\n\n      /** @defaultValue `Playlists` */\n      collection: ConstructorOf<Playlists>;\n\n      /** @defaultValue `'fas fa-music'` */\n      sidebarIcon: string;\n\n      /** @defaultValue `20` */\n      autoPreloadSeconds: number;\n    };\n\n    /**\n     * Configuration for RollTable random draws\n     */\n    RollTable: {\n      /** @defaultValue `RollTable` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof RollTable>;\n\n      /** @defaultValue `RollTables` */\n      collection: ConstructorOf<RollTables>;\n\n      /** @defaultValue `'fas fa-th-list'` */\n      sidebarIcon: string;\n\n      /** @defaultValue `'icons/svg/d20-black.svg'` */\n      resultIcon: string;\n\n      /** @defaultValue `'templates/dice/table-result.html'` */\n      resultTemplate: string;\n    };\n\n    /**\n     * Configuration for the default Scene entity class\n     */\n    Scene: {\n      /** @defaultValue `Scene` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Scene>;\n\n      /** @defaultValue `Scenes` */\n      collection: ConstructorOf<Scenes>;\n\n      /** @defaultValue `'fas fa-map'` */\n      sidebarIcon: string;\n    };\n\n    Setting: {\n      /** @defaultValue `Setting` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Setting>;\n\n      /** @defaultValue `WorldSettings` */\n      collection: ConstructorOf<WorldSettings>;\n    };\n\n    /**\n     * Configuration for the User entity, it's roles, and permissions\n     */\n    User: {\n      /** @defaultValue `User` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof User>;\n\n      /** @defaultValue `Users` */\n      collection: ConstructorOf<Users>;\n    };\n\n    /**\n     * Configuration settings for the Canvas and its contained layers and objects\n     */\n    Canvas: {\n      /** @defaultValue `8` */\n      blurStrength: number;\n\n      /** @defaultValue `ScreenCulling` */\n      cullingBackend: ConstructorOf<typeof ScreenCulling | typeof QuadtreeCulling>;\n\n      /** @defaultValue `0x242448` */\n      darknessColor: number;\n\n      /** @defaultValue `0.25` */\n      darknessLightPenalty: number;\n\n      /** @defaultValue `0xeeeeee` */\n      daylightColor: number;\n\n      dispositionColors: {\n        /** @defaultValue `0xe72124` */\n        HOSTILE: number;\n\n        /** @defaultValue `0xf1d836` */\n        NEUTRAL: number;\n\n        /** @defaultValue `0x43dfdf` */\n        FRIENDLY: number;\n\n        /** @defaultValue `0x555555` */\n        INACTIVE: number;\n\n        /** @defaultValue `0x33bc4e` */\n        PARTY: number;\n\n        /** @defaultValue `0xff9829` */\n        CONTROLLED: number;\n      };\n\n      /** @defaultValue `0x7f7f7f` */\n      exploredColor: number;\n\n      /** @defaultValue `0x000000` */\n      unexploredColor: number;\n\n      groups: CONFIG.Canvas.Groups;\n\n      layers: CONFIG.Canvas.Layers;\n\n      lightLevels: {\n        /** @defaultValue `0` */\n        dark: number;\n\n        /** @defaultValue `0.25` */\n        dim: number;\n\n        /** @defaultValue `1.0` */\n        bright: number;\n      };\n\n      /** @defaultValue `0xb86200` */\n      normalLightColor: number;\n\n      /** @defaultValue `3.0` */\n      maxZoom: number;\n\n      /** @defaultValue `4` */\n      objectBorderThickness: number;\n\n      lightAnimations: {\n        torch: {\n          /** @defaultValue `'LIGHT.AnimationTorch'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTorch` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `TorchIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `TorchColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        pulse: {\n          /** @defaultValue `'LIGHT.AnimationPulse'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animatePulse` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `PulseIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `PulseColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        chroma: {\n          /** @defaultValue `'LIGHT.AnimationChroma'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `ChromaColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        wave: {\n          /** @defaultValue `'LIGHT.AnimationWave'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `WaveIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `WaveColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        fog: {\n          /** @defaultValue `'LIGHT.AnimationFog'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `FogColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        sunburst: {\n          /** @defaultValue `'LIGHT.AnimationSunburst'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `SunburstIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `SunburstColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        dome: {\n          /** @defaultValue `'LIGHT.AnimationLightDome'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `LightDomeColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        emanation: {\n          /** @defaultValue `'LIGHT.AnimationEmanation'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `EmanationColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        hexa: {\n          /** @defaultValue `'LIGHT.AnimationHexaDome';` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `HexaDomeColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        ghost: {\n          /** @defaultValue `'LIGHT.AnimationGhostLight'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `GhostLightIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `GhostLightColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        energy: {\n          /** @defaultValue `'LIGHT.AnimationEnergyField'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `EnergyFieldColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        roiling: {\n          /** @defaultValue `'LIGHT.AnimationRoilingMass'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `RoilingIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        hole: {\n          /** @defaultValue `'LIGHT.AnimationBlackHole'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `BlackHoleIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        vortex: {\n          /** @defaultValue `'LIGHT.AnimationVortex'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `VortexIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `VortexColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        witchwave: {\n          /** @defaultValue `'LIGHT.AnimationBewitchingWave'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `BewitchingWaveIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `BewitchingWaveColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        rainbowswirl: {\n          /** @defaultValue `'LIGHT.AnimationSwirlingRainbow'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `SwirlingRainbowColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        radialrainbow: {\n          /** @defaultValue `'LIGHT.AnimationRadialRainbow'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `RadialRainbowColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        fairy: {\n          /** @defaultValue `'LIGHT.AnimationFairyLight'` */\n          label: string;\n\n          /** @defaultValue `LightSource.prototype.animateTime` */\n          animation: CONFIG.Canvas.LightAnimationFunction;\n\n          /** @defaultValue `FairyLightIlluminationShader` */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /** @defaultValue `FairyLightColorationShader` */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n      } & Record<\n        string,\n        {\n          label: string;\n          animation: CONFIG.Canvas.LightAnimationFunction;\n          illuminationShader?: ConstructorOf<AbstractBaseShader>;\n          colorationShader?: ConstructorOf<AbstractBaseShader>;\n        }\n      >;\n    };\n\n    /**\n     * Configure the default Token text style so that it may be reused and overridden by modules\n     * @defaultValue\n     * ```typescript\n     * new PIXI.TextStyle({\n     *   fontFamily: 'Signika',\n     *   fontSize: 36,\n     *   fill: '#FFFFFF',\n     *   stroke: '#111111',\n     *   strokeThickness: 1,\n     *   dropShadow: true,\n     *   dropShadowColor: '#000000',\n     *   dropShadowBlur: 4,\n     *   dropShadowAngle: 0,\n     *   dropShadowDistance: 0,\n     *   align: 'center',\n     *   wordWrap: false,\n     *   padding: 1\n     * })\n     * ```\n     **/\n    canvasTextStyle: PIXI.TextStyle;\n\n    /**\n     * Available Weather Effects implementations\n     */\n    weatherEffects: {\n      /** @defaultValue `AutumnLeavesWeatherEffect` */\n      leaves: ConstructorOf<SpecialEffect>;\n\n      /** @defaultValue `RainWeatherEffect` */\n      rain: ConstructorOf<SpecialEffect>;\n\n      /** @defaultValue `SnowWeatherEffect` */\n      snow: ConstructorOf<SpecialEffect>;\n    } & Record<string, ConstructorOf<SpecialEffect>>;\n\n    /**\n     * The control icons used for rendering common HUD operations\n     */\n    controlIcons: {\n      /** @defaultValue `'icons/svg/combat.svg'` */\n      combat: string;\n\n      /** @defaultValue `'icons/svg/cowled.svg'` */\n      visibility: string;\n\n      /** @defaultValue `'icons/svg/aura.svg'` */\n      effects: string;\n\n      /** @defaultValue `'icons/svg/padlock.svg'` */\n      lock: string;\n\n      /** @defaultValue `'icons/svg/up.svg'` */\n      up: string;\n\n      /** @defaultValue `'icons/svg/down.svg'` */\n      down: string;\n\n      /** @defaultValue `'icons/svg/skull.svg'` */\n      defeated: string;\n\n      /** @defaultValue `'icons/svg/light.svg'` */\n      light: string;\n\n      /** @defaultValue `'icons/svg/light-off.svg'` */\n      lightOff: string;\n\n      /** @defaultValue `'icons/svg/explosion.svg'` */\n      template: string;\n\n      /** @defaultValue `'icons/svg/sound.svg'` */\n      sound: string;\n\n      /** @defaultValue `'icons/svg/sound-off.svg'` */\n      soundOff: string;\n\n      /** @defaultValue `'icons/svg/door-closed-outline.svg'` */\n      doorClosed: string;\n\n      /** @defaultValue `'icons/svg/door-open-outline.svg'` */\n      doorOpen: string;\n\n      /** @defaultValue `'icons/svg/door-secret-outline.svg'` */\n      doorSecret: string;\n\n      /** @defaultValue `'icons/svg/door-locked-outline.svg'` */\n      doorLocked: string;\n    } & Record<string, string>;\n\n    /**\n     * Suggested font families that are displayed wherever a choice is presented\n     * @defaultValue `[\"Arial\", \"Courier\", \"Courier New\", \"Helvetica\", \"Signika\", \"Times\", \"Times New Roman\", \"Modesto Condensed\"]`\n     */\n    fontFamilies: string[];\n\n    /**\n     * The default font family used for text labels on the PIXI Canvas\n     * @defaultValue `'Signika'`\n     */\n    defaultFontFamily: string;\n\n    /**\n     * An array of status effect icons which can be applied to Tokens\n     * @defaultValue\n     * ```typescript\n     * [\n     *   {\n     *     id: 'dead';\n     *     label: 'EFFECT.StatusDead';\n     *     icon: 'icons/svg/skull.svg';\n     *   },\n     *   {\n     *     id: 'unconscious';\n     *     label: 'EFFECT.StatusUnconscious';\n     *     icon: 'icons/svg/unconscious.svg';\n     *   },\n     *   {\n     *     id: 'sleep';\n     *     label: 'EFFECT.StatusAsleep';\n     *     icon: 'icons/svg/sleep.svg';\n     *   },\n     *   {\n     *     id: 'stun';\n     *     label: 'EFFECT.StatusStunned';\n     *     icon: 'icons/svg/daze.svg';\n     *   },\n     *   {\n     *     id: 'prone';\n     *     label: 'EFFECT.StatusProne';\n     *     icon: 'icons/svg/falling.svg';\n     *   },\n     *   {\n     *     id: 'restrain';\n     *     label: 'EFFECT.StatusRestrained';\n     *     icon: 'icons/svg/net.svg';\n     *   },\n     *   {\n     *     id: 'paralysis';\n     *     label: 'EFFECT.StatusParalysis';\n     *     icon: 'icons/svg/paralysis.svg';\n     *   },\n     *   {\n     *     id: 'fly';\n     *     label: 'EFFECT.StatusFlying';\n     *     icon: 'icons/svg/wing.svg';\n     *   },\n     *   {\n     *     id: 'blind';\n     *     label: 'EFFECT.StatusBlind';\n     *     icon: 'icons/svg/blind.svg';\n     *   },\n     *   {\n     *     id: 'deaf';\n     *     label: 'EFFECT.StatusDeaf';\n     *     icon: 'icons/svg/deaf.svg';\n     *   },\n     *   {\n     *     id: 'silence';\n     *     label: 'EFFECT.StatusSilenced';\n     *     icon: 'icons/svg/silenced.svg';\n     *   },\n     *   {\n     *     id: 'fear';\n     *     label: 'EFFECT.StatusFear';\n     *     icon: 'icons/svg/terror.svg';\n     *   },\n     *   {\n     *     id: 'burning';\n     *     label: 'EFFECT.StatusBurning';\n     *     icon: 'icons/svg/fire.svg';\n     *   },\n     *   {\n     *     id: 'frozen';\n     *     label: 'EFFECT.StatusFrozen';\n     *     icon: 'icons/svg/frozen.svg';\n     *   },\n     *   {\n     *     id: 'shock';\n     *     label: 'EFFECT.StatusShocked';\n     *     icon: 'icons/svg/lightning.svg';\n     *   },\n     *   {\n     *     id: 'corrode';\n     *     label: 'EFFECT.StatusCorrode';\n     *     icon: 'icons/svg/acid.svg';\n     *   },\n     *   {\n     *     id: 'bleeding';\n     *     label: 'EFFECT.StatusBleeding';\n     *     icon: 'icons/svg/blood.svg';\n     *   },\n     *   {\n     *     id: 'disease';\n     *     label: 'EFFECT.StatusDisease';\n     *     icon: 'icons/svg/biohazard.svg';\n     *   },\n     *   {\n     *     id: 'poison';\n     *     label: 'EFFECT.StatusPoison';\n     *     icon: 'icons/svg/poison.svg';\n     *   },\n     *   {\n     *     id: 'radiation';\n     *     label: 'EFFECT.StatusRadiation';\n     *     icon: 'icons/svg/radiation.svg';\n     *   },\n     *   {\n     *     id: 'regen';\n     *     label: 'EFFECT.StatusRegen';\n     *     icon: 'icons/svg/regen.svg';\n     *   },\n     *   {\n     *     id: 'degen';\n     *     label: 'EFFECT.StatusDegen';\n     *     icon: 'icons/svg/degen.svg';\n     *   },\n     *   {\n     *     id: 'upgrade';\n     *     label: 'EFFECT.StatusUpgrade';\n     *     icon: 'icons/svg/upgrade.svg';\n     *   },\n     *   {\n     *     id: 'downgrade';\n     *     label: 'EFFECT.StatusDowngrade';\n     *     icon: 'icons/svg/downgrade.svg';\n     *   },\n     *   {\n     *     id: 'target';\n     *     label: 'EFFECT.StatusTarget';\n     *     icon: 'icons/svg/target.svg';\n     *   },\n     *   {\n     *     id: 'eye';\n     *     label: 'EFFECT.StatusMarked';\n     *     icon: 'icons/svg/eye.svg';\n     *   },\n     *   {\n     *     id: 'curse';\n     *     label: 'EFFECT.StatusCursed';\n     *     icon: 'icons/svg/sun.svg';\n     *   },\n     *   {\n     *     id: 'bless';\n     *     label: 'EFFECT.StatusBlessed';\n     *     icon: 'icons/svg/angel.svg';\n     *   },\n     *   {\n     *     id: 'fireShield';\n     *     label: 'EFFECT.StatusFireShield';\n     *     icon: 'icons/svg/fire-shield.svg';\n     *   },\n     *   {\n     *     id: 'coldShield';\n     *     label: 'EFFECT.StatusIceShield';\n     *     icon: 'icons/svg/ice-shield.svg';\n     *   },\n     *   {\n     *     id: 'magicShield';\n     *     label: 'EFFECT.StatusMagicShield';\n     *     icon: 'icons/svg/mage-shield.svg';\n     *   },\n     *   {\n     *     id: 'holyShield';\n     *     label: 'EFFECT.StatusHolyShield';\n     *     icon: 'icons/svg/holy-shield.svg';\n     *   }\n     * ]\n     * ```\n     */\n    statusEffects: StatusEffect[];\n\n    /**\n     * A mapping of core audio effects used which can be replaced by systems or mods\n     */\n    sounds: {\n      /** @defaultValue `'sounds/dice.wav'` */\n      dice: string;\n\n      /** @defaultValue `'sounds/lock.wav'` */\n      lock: string;\n\n      /** @defaultValue `'sounds/notify.wav'` */\n      notification: string;\n\n      /** @defaultValue `'sounds/drums.wav'` */\n      combat: string;\n    };\n\n    /**\n     * Define the set of supported languages for localization\n     * @defaultValue `{ en: 'English' }`\n     */\n    supportedLanguages: {\n      en: string;\n    } & Record<string, string>;\n\n    /**\n     * Configuration for time tracking\n     */\n    time: {\n      /** @defaultValue `0` */\n      turnTime: number;\n\n      /** @defaultValue `0` */\n      roundTime: number;\n    };\n\n    /**\n     * Configuration for the ActiveEffect embedded document type\n     */\n    ActiveEffect: {\n      /** @defaultValue `ActiveEffect` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof ActiveEffect>;\n    };\n\n    /**\n     * Configuration for the Card embedded Document type\n     */\n    Card: {\n      /** @defaultValue `Card` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Card>;\n    };\n\n    /**\n     * Configuration for the TableResult embedded document type\n     */\n    TableResult: {\n      /** @defaultValue `TableResult` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof TableResult>;\n    };\n\n    /**\n     * Configuration for the ActiveEffect embedded document type\n     */\n    PlaylistSound: {\n      /** @defaultValue `PlaylistSound` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof PlaylistSound>;\n    };\n\n    /**\n     * Configuration for the AmbientLight embedded document type and its representation on the game Canvas\n     */\n    AmbientLight: {\n      /** @defaultValue `AmbientLightDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof AmbientLightDocument>;\n\n      /** @defaultValue `AmbientLightDocument` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof AmbientLight>;\n\n      /** @defaultValue `AmbientLightDocument` */\n      layerClass: typeof LightingLayer;\n    };\n\n    /**\n     * Configuration for the AmbientSound embedded document type and its representation on the game Canvas\n     */\n    AmbientSound: {\n      /** @defaultValue `AmbientSoundDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof AmbientSoundDocument>;\n\n      /** @defaultValue `AmbientSound` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof AmbientSound>;\n\n      /** @defaultValue `SoundsLayer` */\n      layerClass: typeof SoundsLayer;\n    };\n\n    /**\n     * Configuration for the Combatant embedded document type within a Combat document\n     */\n    Combatant: {\n      /** @defaultValue `Combatant` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Combatant>;\n    };\n\n    /**\n     * Configuration for the Drawing embedded document type and its representation on the game Canvas\n     */\n    Drawing: {\n      /** @defaultValue `DrawingDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof DrawingDocument>;\n\n      /** @defaultValue `Drawing` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Drawing>;\n\n      /** @defaultValue `DrawingsLayer` */\n      layerClass: typeof DrawingsLayer;\n    };\n\n    /**\n     * Configuration for the MeasuredTemplate embedded document type and its representation on the game Canvas\n     */\n    MeasuredTemplate: {\n      defaults: {\n        /** @defaultValue `53.13` */\n        angle: number;\n\n        /** @defaultValue `1` */\n        width: number;\n      };\n\n      types: {\n        /** @defaultValue `'Circle'` */\n        circle: string;\n\n        /** @defaultValue `'Cone'` */\n        cone: string;\n\n        /** @defaultValue `'Rectangle'` */\n        rect: string;\n\n        /** @defaultValue `'Ray'` */\n        ray: string;\n      };\n\n      /** @defaultValue `MeasuredTemplateDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof MeasuredTemplateDocument>;\n\n      /** @defaultValue `MeasuredTemplate` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof MeasuredTemplate>;\n\n      /** @defaultValue `TemplateLayer` */\n      layerClass: typeof TemplateLayer;\n    };\n\n    /**\n     * Configuration for the Note embedded document type and its representation on the game Canvas\n     */\n    Note: {\n      /** @defaultValue `NoteDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof NoteDocument>;\n\n      /** @defaultValue `Note` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Note>;\n\n      /** @defaultValue `NotesLayer` */\n      layerClass: typeof NotesLayer;\n    };\n\n    /**\n     * Configuration for the Tile embedded document type and its representation on the game Canvas\n     */\n    Tile: {\n      /** @defaultValue `TileDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof TileDocument>;\n\n      /** @defaultValue `Tile` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Tile>;\n\n      /** @defaultValue `BackgroundLayer` */\n      layerClass: typeof BackgroundLayer;\n    };\n\n    /**\n     * Configuration for the Token embedded document type and its representation on the game Canvas\n     */\n    Token: {\n      /** @defaultValue `TokenDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof TokenDocument>;\n\n      /** @defaultValue `Token` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Token>;\n\n      /** @defaultValue `TokenLayer` */\n      layerClass: typeof TokenLayer;\n\n      /** @defaultValue `TokenConfig` */\n      prototypeSheetClass: ConstructorOf<TokenConfig>;\n    };\n\n    /**\n     * Configuration for the Wall embedded document type and its representation on the game Canvas\n     */\n    Wall: {\n      /** @defaultValue `WallDocument` */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof WallDocument>;\n\n      /** @defaultValue `Wall` */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Wall>;\n\n      /** @defaultValue `WallsLayer` */\n      layerClass: typeof WallsLayer;\n    };\n\n    /**\n     * Default configuration options for TinyMCE editors\n     */\n    TinyMCE: tinyMCE.RawEditorSettings;\n\n    /**\n     * Configuration for the WebRTC implementation class\n     */\n    WebRTC: {\n      /** @defaultValue `SimplePeerAVClient` */\n      clientClass: PropertyTypeOrFallback<WebRTCConfig, 'clientClass', typeof AVClient>;\n\n      /** @defaultValue `50` */\n      detectPeerVolumeInterval: number;\n\n      /** @defaultValue `20` */\n      detectSelfVolumeInterval: number;\n\n      /** @defaultValue `25` */\n      emitVolumeInterval: number;\n\n      /** @defaultValue `2` */\n      speakingThresholdEvents: number;\n\n      /** @defaultValue `10` */\n      speakingHistoryLength: number;\n\n      /** @defaultValue `8` */\n      connectedUserPollIntervalS: number;\n    };\n\n    /**\n     * Configure the Application classes used to render various core UI elements in the application\n     */\n    ui: CONFIG.UI;\n  }\n\n  namespace CONFIG {\n    interface UI {\n      /** @defaultValue `MainMenu` */\n      menu: ConstructorOf<MainMenu>;\n\n      /** @defaultValue `Sidebar` */\n      sidebar: ConstructorOf<Sidebar>;\n\n      /** @defaultValue `Pause` */\n      pause: ConstructorOf<Pause>;\n\n      /** @defaultValue `SceneNavigation` */\n      nav: ConstructorOf<SceneNavigation>;\n\n      /** @defaultValue `Notifications` */\n      notifications: ConstructorOf<Notifications>;\n\n      /** @defaultValue `ActorDirectory` */\n      actors: ConstructorOf<ActorDirectory>;\n\n      /** @defaultValue `CardsDirectory` */\n      cards: ConstructorOf<CardsDirectory>;\n\n      /** @defaultValue `ChatLog` */\n      chat: ConstructorOf<ChatLog>;\n\n      /** @defaultValue `CombatTracker` */\n      combat: ConstructorOf<CombatTracker>;\n\n      /** @defaultValue `CompendiumDirectory` */\n      compendium: ConstructorOf<CompendiumDirectory>;\n\n      /** @defaultValue `SceneControls` */\n      controls: ConstructorOf<SceneControls>;\n\n      /** @defaultValue `Hotbar` */\n      hotbar: ConstructorOf<Hotbar>;\n\n      /** @defaultValue `ItemDirectory` */\n      items: ConstructorOf<ItemDirectory>;\n\n      /** @defaultValue `JournalDirectory` */\n      journal: ConstructorOf<JournalDirectory>;\n\n      /** @defaultValue `MacroDirectory` */\n      macros: ConstructorOf<MacroDirectory>;\n\n      /** @defaultValue `PlayerList` */\n      players: ConstructorOf<PlayerList>;\n\n      /** @defaultValue `PlaylistDirectory` */\n      playlists: ConstructorOf<PlaylistDirectory>;\n\n      /** @defaultValue `SceneDirectory` */\n      scenes: ConstructorOf<SceneDirectory>;\n\n      /** @defaultValue `Settings` */\n      settings: ConstructorOf<Settings>;\n\n      /** @defaultValue `RollTableDirectory` */\n      tables: ConstructorOf<RollTableDirectory>;\n\n      /** @defaultValue `CameraViews` */\n      webrtc: ConstructorOf<CameraViews>;\n    }\n\n    namespace Canvas {\n      interface Groups {\n        /** @defaultValue `{ groupClass: PrimaryCanvasGroup }` */\n        primary: CONFIG.Canvas.GroupDefinition<typeof PrimaryCanvasGroup>;\n\n        /** @defaultValue `{ groupClass: EffectsCanvasGroup }` */\n        effects: CONFIG.Canvas.GroupDefinition<typeof EffectsCanvasGroup>;\n\n        /** @defaultValue `{ groupClass: InterfaceCanvasGroup }` */\n        interface: CONFIG.Canvas.GroupDefinition<typeof InterfaceCanvasGroup>;\n\n        [key: string]: CONFIG.Canvas.GroupDefinition;\n      }\n\n      interface Layers {\n        /** @defaultValue `{ layerClass: BackgroundLayer, group: \"primary\" }` */\n        background: LayerDefinition<typeof BackgroundLayer>;\n\n        /** @defaultValue `{ layerClass: DrawingsLayer, group: \"primary\" }` */\n        drawings: LayerDefinition<typeof DrawingsLayer>;\n\n        /** @defaultValue `{ layerClass: GridLayer, group: \"primary\" }` */\n        grid: LayerDefinition<typeof GridLayer>;\n\n        /** @defaultValue `{ layerClass: TemplateLayer, group: \"primary\" }` */\n        templates: LayerDefinition<typeof TemplateLayer>;\n\n        /** @defaultValue `{ layerClass: TokenLayer, group: \"primary\" }` */\n        tokens: LayerDefinition<typeof TokenLayer>;\n\n        /** @defaultValue `{ layerClass: ForegroundLayer, group: \"primary\" }` */\n        foreground: LayerDefinition<typeof ForegroundLayer>;\n\n        /** @defaultValue `{ layerClass: WallsLayer, group: \"effects\" }` */\n        walls: LayerDefinition<typeof WallsLayer>;\n\n        /** @defaultValue `{ layerClass: LightingLayer, group: \"effects\" }` */\n        lighting: LayerDefinition<typeof LightingLayer>;\n\n        /** @defaultValue `{ layerClass: WeatherLayer, group: \"effects\" }` */\n        weather: LayerDefinition<typeof WeatherLayer>;\n\n        /** @defaultValue `{ layerClass: SightLayer, group: \"effects\" }` */\n        sight: LayerDefinition<typeof SightLayer>;\n\n        /** @defaultValue `{ layerClass: SoundsLayer, group: \"interface\" }` */\n        sounds: LayerDefinition<typeof SoundsLayer>;\n\n        /** @defaultValue `{ layerClass: NotesLayer, group: \"interface\" }` */\n        notes: LayerDefinition<typeof NotesLayer>;\n\n        /** @defaultValue `{ layerClass: ControlsLayer, group: \"interface\" }` */\n        controls: LayerDefinition<typeof ControlsLayer>;\n\n        [key: string]: LayerDefinition;\n      }\n\n      interface GroupDefinition<GroupClass extends CanvasGroupConstructor = CanvasGroupConstructor> {\n        groupClass: GroupClass;\n      }\n\n      interface LayerDefinition<LayerClass extends ConstructorOf<CanvasLayer> = ConstructorOf<CanvasLayer>> {\n        layerClass: LayerClass;\n        group: keyof CONFIG['Canvas']['groups'];\n      }\n\n      type LightAnimationFunction = (\n        this: PointSource,\n        dt: number,\n        properties?: { speed?: number; intensity?: number; reverse?: false }\n      ) => void;\n    }\n\n    namespace Cards {\n      interface Preset {\n        type: string;\n        label: string;\n        src: string;\n      }\n    }\n\n    namespace Dice {\n      // eslint-disable-next-line @typescript-eslint/no-empty-interface\n      interface RollModes extends Record<foundry.CONST.DICE_ROLL_MODES, string> {}\n    }\n  }\n\n  const CONFIG: CONFIG;\n}\n\ntype ConfiguredDocumentClassOrDefault<Fallback extends DocumentConstructor> =\n  Fallback['metadata']['name'] extends keyof DocumentClassConfig\n    ? DocumentClassConfig[Fallback['metadata']['name']]\n    : Fallback;\n\ntype ConfiguredObjectClassOrDefault<Fallback extends PlaceableObjectConstructor> =\n  Fallback['embeddedName'] extends keyof PlaceableObjectClassConfig\n    ? PlaceableObjectClassConfig[Fallback['embeddedName']]\n    : Fallback;\n\ntype PixiContainerConstructor = typeof PIXI.Container;\ninterface CanvasGroup extends PIXI.Container {\n  sortableChildren: boolean;\n}\n\ninterface CanvasGroupConstructor extends PixiContainerConstructor {\n  new (): CanvasGroup;\n\n  /**\n   * The name of this canvas group\n   */\n  groupName: string;\n}\n"
    ]
  