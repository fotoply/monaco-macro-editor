
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\adventureData.d.ts",
      "import type { PropertiesToSource } from '../../../../types/helperTypes';\nimport type DocumentData from '../../abstract/data.mjs';\nimport { AnyDocumentData } from '../../abstract/data.mjs';\nimport * as fields from '../fields.mjs';\nimport type { ActorData, ActorDataConstructorData } from './actorData';\nimport type { CardsData, CardsDataConstructorData } from './cardsData';\nimport type { CombatData, CombatDataConstructorData } from './combatData';\nimport type { FolderData, FolderDataConstructorData } from './folderData';\nimport type { ItemData, ItemDataConstructorData } from './itemData';\nimport type { JournalEntryData, JournalEntryDataConstructorData } from './journalEntryData';\nimport type { MacroData, MacroDataConstructorData } from './macroData';\nimport type { PlaylistData, PlaylistDataConstructorData } from './playlistData';\nimport type { RollTableData, RollTableDataConstructorData } from './rollTableData';\nimport type { SceneData, SceneDataConstructorData } from './sceneData';\n\ninterface AdventureDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  name: fields.RequiredString;\n  img: fields.ImageField;\n  description: fields.BlankString;\n  actors: AdventureDocumentsField<typeof ActorData>;\n  combats: AdventureDocumentsField<typeof CombatData>;\n  items: AdventureDocumentsField<typeof ItemData>;\n  scenes: AdventureDocumentsField<typeof SceneData>;\n  journal: AdventureDocumentsField<typeof JournalEntryData>;\n  tables: AdventureDocumentsField<typeof RollTableData>;\n  macros: AdventureDocumentsField<typeof MacroData>;\n  cards: AdventureDocumentsField<typeof CardsData>;\n  playlists: AdventureDocumentsField<typeof PlaylistData>;\n  folders: AdventureDocumentsField<typeof FolderData>;\n  sort: fields.IntegerSortField;\n  flags: fields.ObjectField;\n}\n\ninterface AdventureDataProperties {\n  /** @defaultValue `null` */\n  _id: string | null;\n\n  name: string;\n\n  img: string | null | undefined;\n\n  /** @defaultValue `\"\"` */\n  description: string;\n\n  /** @defaultValue `[]` */\n  actors: ActorData[];\n\n  /** @defaultValue `[]` */\n  combats: CombatData[];\n\n  /** @defaultValue `[]` */\n  items: ItemData[];\n\n  /** @defaultValue `[]` */\n  scenes: SceneData[];\n\n  /** @defaultValue `[]` */\n  journal: JournalEntryData[];\n\n  /** @defaultValue `[]` */\n  tables: RollTableData[];\n\n  /** @defaultValue `[]` */\n  macros: MacroData[];\n\n  /** @defaultValue `[]` */\n  cards: CardsData[];\n\n  /** @defaultValue `[]` */\n  playlists: PlaylistData[];\n\n  /** @defaultValue `[]` */\n  folders: FolderData[];\n\n  /** @defaultValue `0` */\n  sort: number;\n\n  /** @defaultValue `{}` */\n  flags: Record<string, unknown>;\n}\n\ninterface AdventureDataConstructorData {\n  /** @defaultValue `null` */\n  _id?: string | null | undefined;\n\n  name: string;\n\n  img?: string | null | undefined;\n\n  /** @defaultValue `\"\"` */\n  description?: string | null | undefined;\n\n  /** @defaultValue `[]` */\n  actors?: ActorDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  combats?: CombatDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  items?: ItemDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  scenes?: SceneDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  journal?: JournalEntryDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  tables?: RollTableDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  macros?: MacroDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  cards?: CardsDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  playlists?: PlaylistDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `[]` */\n  folders?: FolderDataConstructorData[] | null | undefined;\n\n  /** @defaultValue `0` */\n  sort?: number | null | undefined;\n\n  /** @defaultValue `{}` */\n  flags?: Record<string, unknown> | null | undefined;\n}\n\ntype AdventureDataSource = PropertiesToSource<AdventureDataProperties>;\n\n/**\n * A data schema which encompasses a collection of base Documents which comprise an adventure module.\n *\n * WARNING: This data schema is an early prototype which will be fully implemented in V10.\n * Until then it is for internal use only. Use this at your own risk.\n * @internal\n *\n * @see BaseAdventure\n */\nexport class AdventureData extends DocumentData<\n  AdventureDataSchema,\n  AdventureDataProperties,\n  AdventureDataSource,\n  AdventureDataConstructorData\n> {\n  static override defineSchema(): AdventureDataSchema;\n\n  /**\n   * A type of data field which stores a collection of document data objects\n   * @typeParam D - the type of the DocumentData constructor\n   */\n  static ADVENTURE_DOCUMENTS_FIELD<D extends ConstructorOf<AnyDocumentData>>(dataCls: D): AdventureDocumentsField<D>;\n}\n\n/**\n * Property type: `D[]`\n * Constructor type: `ConstructorDataType<D>[] | null | undefined`\n * Default: `[]`\n */\ntype AdventureDocumentsField<D extends ConstructorOf<AnyDocumentData>> = DocumentField<D> & {\n  type: [D];\n  required: true;\n  default: [];\n};\n"
    ]
  