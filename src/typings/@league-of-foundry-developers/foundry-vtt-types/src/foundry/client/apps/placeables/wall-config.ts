
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\placeables\\wall-config.d.ts",
      "import type { ConfiguredDocumentClassForName, ConfiguredObjectClassForName } from '../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single Wall document within a parent Scene.\n   * @typeParam Options - The type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class WallConfig<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends object = WallConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'Wall'>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * const options = super.defaultOptions;\n     * options.template = \"templates/scene/wall-config.html\";\n     * options.width = 400;\n     * ```\n     */\n    static get defaultOptions(): DocumentSheetOptions;\n\n    /**\n     * An array of Wall ids that should all be edited when changes to this config form are submitted\n     * @defaultValue `[]`\n     */\n    editTargets: string[];\n\n    override get title(): string;\n\n    override render(\n      force?: boolean,\n      options?: Application.RenderOptions<Options> & {\n        walls?: InstanceType<ConfiguredObjectClassForName<'Wall'>>[] | undefined;\n      }\n    ): this;\n\n    override getData(): Data | Promise<Data>;\n\n    protected override _updateObject(event: Event, formData: WallConfig.FormData): Promise<unknown>;\n  }\n\n  namespace WallConfig {\n    interface Data<Options extends DocumentSheetOptions = DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'Wall'>>, Options> {\n      object: DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'Wall'>>, Options>['data'];\n      moveTypes: {\n        [Key in keyof typeof foundry.CONST.WALL_MOVEMENT_TYPES as typeof foundry.CONST.WALL_MOVEMENT_TYPES[Key]]: Titlecase<Key>;\n      };\n      senseTypes: {\n        [Key in keyof typeof foundry.CONST.WALL_SENSE_TYPES as typeof foundry.CONST.WALL_SENSE_TYPES[Key]]: Titlecase<Key>;\n      };\n      dirTypes: {\n        [Key in keyof typeof foundry.CONST.WALL_DIRECTIONS as typeof foundry.CONST.WALL_DIRECTIONS[Key]]: Titlecase<Key>;\n      };\n      doorTypes: {\n        [Key in keyof typeof foundry.CONST.WALL_DOOR_TYPES as typeof foundry.CONST.WALL_DOOR_TYPES[Key]]: Titlecase<Key>;\n      };\n      doorStates: {\n        [Key in keyof typeof foundry.CONST.WALL_DOOR_STATES as typeof foundry.CONST.WALL_DOOR_STATES[Key]]: Titlecase<Key>;\n      };\n      isDoor: boolean;\n    }\n\n    interface FormData {\n      dir: foundry.CONST.WALL_DIRECTIONS;\n      door: foundry.CONST.WALL_DOOR_TYPES;\n      light: foundry.CONST.WALL_SENSE_TYPES;\n      ds?: foundry.CONST.WALL_DOOR_STATES;\n      move: foundry.CONST.WALL_MOVEMENT_TYPES;\n      sight: foundry.CONST.WALL_SENSE_TYPES;\n      sound: foundry.CONST.WALL_SENSE_TYPES;\n    }\n  }\n}\n"
    ]
  