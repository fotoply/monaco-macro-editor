
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\sidebar\\apps\\compendium.d.ts",
      "/**\n * An interface for displaying the content of a CompendiumCollection.\n * @typeParam Metadata - The metadata of the compendium\n * @typeParam Options  - The type of the options object\n * @typeParam Data    - The data structure used to render the handlebars template.\n */\ndeclare class Compendium<\n  Metadata extends CompendiumCollection.Metadata,\n  Options extends ApplicationOptions = ApplicationOptions,\n  Data extends object = Compendium.Data<Metadata>\n> extends Application<Options> {\n  /**\n   * @param collection - The {@link CompendiumCollection} object represented by this interface.\n   * @param options    - Application configuration options.\n   */\n  constructor(collection: CompendiumCollection<Metadata>, options?: Partial<Options> | undefined);\n\n  collection: CompendiumCollection<Metadata>;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * foundry.utils.mergeObject(super.defaultOptions, {\n   *   template: \"templates/apps/compendium.html\",\n   *   width: 350,\n   *   height: window.innerHeight - 100,\n   *   top: 70,\n   *   left: 120,\n   *   scrollY: [\".directory-list\"],\n   *   dragDrop: [{ dragSelector: \".directory-item\", dropSelector: \".directory-list\" }],\n   *   filters: [{inputSelector: 'input[name=\"search\"]', contentSelector: \".directory-list\"}]\n   * });\n   * ```\n   */\n  static override get defaultOptions(): ApplicationOptions;\n\n  override get title(): string;\n\n  /**\n   * A convenience redirection back to the metadata object of the associated CompendiumCollection\n   */\n  get metadata(): this['collection']['metadata'];\n\n  override getData(options?: Partial<Options>): Promise<Data> | Data;\n\n  override close(options?: Application.CloseOptions): Promise<void>;\n\n  override activateListeners(html: JQuery): void;\n\n  /**\n   * Handle opening a single compendium entry by invoking the configured document class and its sheet\n   * @param event - The originating click event\n   */\n  protected _onClickEntry(event: JQuery.ClickEvent): void;\n\n  protected override _onSearchFilter(event: KeyboardEvent, query: string, rgx: RegExp, html: HTMLElement): void;\n\n  protected override _canDragStart(selector: string): boolean;\n\n  protected override _canDragDrop(selector: string): boolean;\n\n  protected override _onDragStart(event: DragEvent): void;\n\n  /**\n   * @internal\n   */\n  protected override _onDrop(event: DragEvent): void;\n\n  protected override _contextMenu(html: JQuery): void;\n\n  /**\n   * Get Compendium entry context options\n   * @returns The Compendium entry context options\n   * @internal\n   */\n  protected _getEntryContextOptions(): ContextMenuEntry;\n}\n\ndeclare namespace Compendium {\n  interface Data<Metadata extends CompendiumCollection.Metadata> {\n    collection: CompendiumCollection<Metadata>;\n    documentCls: string;\n    index: CompendiumCollection<Metadata>['index'];\n    documentPartial: string;\n  }\n}\n"
    ]
  