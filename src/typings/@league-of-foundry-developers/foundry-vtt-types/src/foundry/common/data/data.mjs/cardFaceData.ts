
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\cardFaceData.d.ts",
      "import type { PropertiesToSource } from '../../../../types/helperTypes';\nimport type DocumentData from '../../abstract/data.mjs';\nimport * as fields from '../fields.mjs';\n\ninterface CardFaceDataSchema extends DocumentSchema {\n  name: fields.BlankString;\n  text: fields.BlankString;\n  img: fields.VideoField;\n}\n\ninterface CardFaceDataProperties {\n  /**\n   * A name for this card face\n   * @defaultValue `\"\"`\n   */\n  name: string;\n\n  /**\n   * Displayed text that belongs to this face\n   * @defaultValue `\"\"`\n   */\n  text: string;\n\n  /** A displayed image or video file which depicts the face */\n  img: string | null | undefined;\n}\n\ninterface CardFaceDataConstructorData {\n  /**\n   * A name for this card face\n   * @defaultValue `\"\"`\n   */\n  name?: string | null | undefined;\n\n  /**\n   * Displayed text that belongs to this face\n   * @defaultValue `\"\"`\n   */\n  text?: string | null | undefined;\n\n  /** A displayed image or video file which depicts the face */\n  img?: string | null | undefined;\n}\n\ntype CardFaceDataSource = PropertiesToSource<CardFaceDataProperties>;\n\n/**\n * The data schema of a single card face which belongs to a specific Card.\n * @see CardData\n */\nexport class CardFaceData extends DocumentData<\n  CardFaceDataSchema,\n  CardFaceDataProperties,\n  CardFaceDataSource,\n  CardFaceDataConstructorData\n> {\n  static override defineSchema(): CardFaceDataSchema;\n\n  /**\n   * The default icon used for a card face that does not have a custom image set\n   * @defaultValue `\"icons/svg/card-joker.svg\"`\n   */\n  static DEFAULT_ICON: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface CardFaceData extends CardFaceDataProperties {}\n"
    ]
  