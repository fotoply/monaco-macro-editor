
    export default [
      "engine.io-client\\build\\esm\\transports\\polling.d.ts",
      "import { Transport } from \"../transport.js\";\nexport declare abstract class Polling extends Transport {\n    private polling;\n    /**\n     * Transport name.\n     */\n    get name(): string;\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen(): void;\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause: any): void;\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll(): void;\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data: any): void;\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose(): void;\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets: any): void;\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri(): string;\n    abstract doPoll(): any;\n    abstract doWrite(data: any, callback: any): any;\n}\n"
    ]
  