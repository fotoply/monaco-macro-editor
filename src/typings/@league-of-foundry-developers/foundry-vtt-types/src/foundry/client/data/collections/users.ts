
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\data\\collections\\users.d.ts",
      "import { ConfiguredDocumentClass } from '../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * The singleton collection of User documents which exist within the active World.\n   * This Collection is accessible within the Game object as game.users.\n   *\n   * @see {@link User} The User document\n   */\n  class Users extends WorldCollection<typeof foundry.documents.BaseUser, 'Users'> {\n    constructor(data?: foundry.data.UserData['_source'][]);\n\n    /**\n     * The User document of the currently connected user\n     * @defaultValue `null`\n     */\n    current: StoredDocument<InstanceType<ConfiguredDocumentClass<typeof foundry.documents.BaseUser>>> | null;\n\n    /**\n     * Initialize the Map object and all its contained documents\n     * @internal\n     */\n    protected override _initialize(): void;\n\n    static override documentName: 'User';\n\n    /**\n     * Get the users with player roles\n     */\n    get players(): ReturnType<this['filter']>;\n\n    /** @remarks This is not marked as protected because it is used in {@link Game#activateSocketListeners} */\n    static _activateSocketListeners(socket: io.Socket): void;\n\n    /**\n     * Handle receipt of activity data from another User connected to the Game session\n     * @param userId       - The User id who generated the activity data\n     * @param activityData - The object of activity data\n     *                       (default: `{}`)\n     */\n    protected static _handleUserActivity(userId: string, activityData?: ActivityData | undefined): void;\n  }\n}\n"
    ]
  