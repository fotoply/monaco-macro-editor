
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\placeables\\tile-config.d.ts",
      "import { ConfiguredDocumentClassForName } from '../../../../types/helperTypes';\nimport type { TileDataConstructorData } from '../../../common/data/data.mjs/tileData';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single Tile document within a parent Scene.\n   * @typeParam Options - the type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class TileConfig<\n    Options extends TileConfig.Options = TileConfig.Options,\n    Data extends object = TileConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'Tile'>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * mergeObject(super.defaultOptions, {\n     *   id: \"tile-config\",\n     *   title: game.i18n.localize(\"TILE.ConfigTitle\"),\n     *   template: \"templates/scene/tile-config.html\",\n     *   width: 420,\n     *   height: \"auto\",\n     *   submitOnChange: true,\n     *   tabs: [{navSelector: \".tabs\", contentSelector: \"form\", initial: \"basic\"}]\n     * });\n     * ```\n     */\n    static override get defaultOptions(): TileConfig.Options;\n\n    override close(options?: Application.CloseOptions | undefined): Promise<void>;\n\n    override getData(options?: Partial<Options> | undefined): Data | Promise<Data>;\n\n    protected override _onChangeInput(event: JQuery.ChangeEvent): void;\n\n    protected override _updateObject(event: Event, formData: TileConfig.FormData): Promise<unknown>;\n  }\n\n  namespace TileConfig {\n    interface Data<Options extends DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'Tile'>>, Options> {\n      submitText: string;\n      occlusionModes: Record<foundry.CONST.TILE_OCCLUSION_MODES, string>;\n    }\n\n    type FormData = Pick<TileDataConstructorData, 'height' | 'img' | 'rotation' | 'width' | 'x' | 'y'>;\n\n    interface Options extends DocumentSheetOptions {\n      /**\n       * Configure a preview version of a tile which is not yet saved\n       */\n      preview?: boolean;\n    }\n  }\n}\n"
    ]
  