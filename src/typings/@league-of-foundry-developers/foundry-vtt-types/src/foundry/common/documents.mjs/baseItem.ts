
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\documents.mjs\\baseItem.d.ts",
      "import * as data from '../data/data.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { DocumentMetadata } from '../abstract/document.mjs';\nimport { BaseActor } from './baseActor';\nimport { BaseActiveEffect } from './baseActiveEffect';\nimport { BaseUser } from './baseUser';\nimport { ConfiguredDocumentClass } from '../../../types/helperTypes';\n\ntype ItemMetadata = Merge<\n  DocumentMetadata,\n  {\n    name: 'Item';\n    collection: 'items';\n    label: 'DOCUMENT.Item';\n    labelPlural: 'DOCUMENT.Items';\n    embedded: {\n      ActiveEffect: typeof BaseActiveEffect;\n    };\n    isPrimary: true;\n    hasSystemData: true;\n    types: string[];\n    permissions: {\n      create: 'ITEM_CREATE';\n    };\n  }\n>;\n\n/**\n * The base Item model definition which defines common behavior of an Item document between both client and server.\n */\nexport declare class BaseItem extends Document<\n  data.ItemData,\n  InstanceType<ConfiguredDocumentClass<typeof BaseActor>>,\n  ItemMetadata\n> {\n  static override get schema(): typeof data.ItemData;\n\n  static override get metadata(): ItemMetadata;\n\n  /**\n   * A reference to the Collection of ActiveEffect instances in the Item document, indexed by _id.\n   */\n  get effects(): this['data']['effects'];\n\n  /**\n   * The sub-type of Item.\n   */\n  get type(): this['data']['type'];\n\n  override canUserModify(user: BaseUser, action: 'create' | 'update' | 'delete', data?: object): boolean;\n\n  override testUserPermission(\n    user: BaseUser,\n    permission: keyof typeof foundry.CONST.DOCUMENT_PERMISSION_LEVELS | foundry.CONST.DOCUMENT_PERMISSION_LEVELS,\n    { exact }: { exact?: boolean }\n  ): boolean;\n}\n"
    ]
  