
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\documents.mjs\\baseCombatant.d.ts",
      "import { ConfiguredDocumentClass } from '../../../types/helperTypes';\nimport { DocumentMetadata } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport type { CombatantDataConstructorData, CombatantDataSource } from '../data/data.mjs/combatantData';\nimport { data } from '../module.mjs';\nimport { BaseCombat } from './baseCombat';\nimport { BaseUser } from './baseUser';\n\ntype CombatantMetadata = Merge<\n  DocumentMetadata,\n  {\n    name: 'Combatant';\n    collection: 'combatants';\n    label: 'DOCUMENT.Combatant';\n    isEmbedded: true;\n    labelPlural: 'DOCUMENT.Combatants';\n    permissions: {\n      create: (user: BaseUser, doc: BaseCombatant, data: CombatantDataSource) => boolean;\n      update: (user: BaseUser, doc: BaseCombatant, data: DeepPartial<CombatantDataConstructorData>) => boolean;\n    };\n  }\n>;\n\n/**\n * The base Combatant model definition which defines common behavior of an Combatant document between both client and server.\n */\nexport declare class BaseCombatant extends Document<\n  data.CombatantData,\n  InstanceType<ConfiguredDocumentClass<typeof BaseCombat>>,\n  CombatantMetadata\n> {\n  static override get schema(): typeof data.CombatantData;\n\n  static override get metadata(): CombatantMetadata;\n\n  /**\n   * Is a user able to update an existing Combatant?\n   * @remarks doc seems unused\n   */\n  protected static _canUpdate(\n    user: BaseUser,\n    doc: BaseCombatant,\n    data: DeepPartial<CombatantDataConstructorData>\n  ): boolean;\n\n  /** Is a user able to create this Combatant? */\n  protected static _canCreate(user: BaseUser, doc: BaseCombatant, data: CombatantDataSource): boolean;\n}\n"
    ]
  