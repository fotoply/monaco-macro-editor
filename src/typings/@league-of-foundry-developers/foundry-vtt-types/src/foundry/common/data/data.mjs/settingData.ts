
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\settingData.d.ts",
      "import { FieldReturnType, PropertiesToSource } from '../../../../types/helperTypes';\nimport { DocumentData } from '../../abstract/module.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\n\ninterface SettingDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  key: DocumentField<string> & {\n    type: typeof String;\n    required: true;\n    validate: typeof _validateKeyFormat;\n    validationError: 'Invalid setting key format which should be {scope}.{field}';\n  };\n  value: FieldReturnType<fields.JsonField, { required: true }>;\n}\n\ninterface SettingDataProperties {\n  /**\n   * The _id which uniquely identifies this Setting document\n   * @defaultValue `null`\n   */\n  _id: string | null;\n\n  /**\n   * The setting key, a composite of \\{scope\\}.\\{name\\}\n   */\n  key: `${string}.${string}`;\n\n  /**\n   * The setting value, which may be any type of data\n   * @remarks This is the stringified data\n   */\n  value: string;\n}\n\ninterface SettingDataConstructorData {\n  /**\n   * The _id which uniquely identifies this Setting document\n   * @defaultValue `null`\n   */\n  _id?: string | null | undefined;\n\n  /**\n   * The setting key, a composite of \\{scope\\}.\\{name\\}\n   */\n  key: `${string}.${string}`;\n\n  /**\n   * The setting value, which may be any type of data\n   * @remarks This is the stringified data\n   */\n  value: string | object;\n}\n\ntype SettingDataSource = PropertiesToSource<SettingDataProperties>;\n\n/**\n * The data schema for a Setting document.\n * @see BaseSetting\n */\nexport class SettingData extends DocumentData<\n  SettingDataSchema,\n  SettingDataProperties,\n  SettingDataSource,\n  SettingDataConstructorData,\n  documents.BaseSetting\n> {\n  /**\n   * @remarks\n   * This constructor is only typed to be overridden to make the first parameter\n   * required. It isn't actually overridden at runtime.\n   */\n  constructor(data: SettingDataConstructorData, document?: documents.BaseSetting | null);\n\n  static override defineSchema(): SettingDataSchema;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SettingData extends SettingDataProperties {}\n\n/**\n * Validate that each setting key matches the expected format\n * @param key - The key to test\n * @returns Is the key valid?\n */\ndeclare function _validateKeyFormat(key: string): boolean;\n"
    ]
  