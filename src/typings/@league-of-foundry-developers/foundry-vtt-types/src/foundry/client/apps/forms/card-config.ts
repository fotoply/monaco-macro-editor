
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\forms\\card-config.d.ts",
      "import type { ConfiguredDocumentClassForName, ConstructorDataType } from '../../../../types/helperTypes.js';\nimport type { CardFaceData } from '../../../common/data/module.mjs.js';\n\ndeclare global {\n  /**\n   * A DocumentSheet application responsible for displaying and editing a single embedded Card document.\n   *\n   * @typeParam Options - The type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class CardConfig<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends CardConfig.Data<Options> = CardConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'Card'>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   classes: [\"sheet\", \"card-config\"],\n     *   template: \"templates/cards/card-config.html\",\n     *   width: 480,\n     *   height: \"auto\",\n     *   tabs: [{navSelector: \".tabs\", contentSelector: \"form\", initial: \"details\"}]\n     * })\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n\n    override getData(options?: Partial<Options>): Data | Promise<Data>;\n\n    override activateListeners(html: JQuery): void;\n\n    protected override _getSubmitData(\n      updateData?: object | null\n    ): Record<string, unknown> & { faces: ConstructorDataType<CardFaceData>[] };\n\n    /**\n     * Handle card face control actions which modify single cards on the sheet.\n     * @param event - The originating click event\n     * @returns A Promise which resolves once the handler has completed\n     */\n    protected _onFaceControl(event: JQuery.ClickEvent): Promise<void>;\n  }\n\n  namespace CardConfig {\n    interface Data<Options extends DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'Card'>>, Options> {\n      types: Record<string, string>;\n    }\n  }\n}\n"
    ]
  