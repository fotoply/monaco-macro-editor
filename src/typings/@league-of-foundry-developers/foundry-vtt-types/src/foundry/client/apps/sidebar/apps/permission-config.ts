
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\sidebar\\apps\\permission-config.d.ts",
      "/**\n * An application for configuring the permissions which are available to each User role.\n */\ndeclare class PermissionConfig extends FormApplication<FormApplicationOptions, PermissionConfig.Data> {\n  /**\n   * @defaultValue\n   * ```typescript\n   * mergeObject(super.defaultOptions, {\n   *   title: game.i18n.localize(\"PERMISSION.Title\"),\n   *   id: \"permissions-config\",\n   *   template: \"templates/sidebar/apps/permission-config.html\",\n   *   width: 660,\n   *   height: \"auto\",\n   *   scrollY: [\".permissions-list\"],\n   *   closeOnSubmit: true\n   * })\n   * ```\n   */\n  static override get defaultOptions(): typeof FormApplication['defaultOptions'];\n\n  override getData(options?: Partial<FormApplicationOptions>): PermissionConfig.Data;\n\n  /**\n   * Prepare the permissions object used to render the configuration template\n   */\n  protected _getPermissions(current: Game.Permissions): PermissionConfig.Permission[];\n\n  override activateListeners(html: JQuery): void;\n\n  /**\n   * Handle button click to reset default settings\n   * @param event - The initial button click event\n   */\n  protected _onResetDefaults(event: JQuery.ClickEvent): void;\n\n  protected override _onSubmit(\n    event: Event,\n    options?: FormApplication.OnSubmitOptions\n  ): ReturnType<FormApplication['_onSubmit']>;\n\n  protected override _updateObject(event: Event, formData: PermissionConfig.FormData): Promise<unknown>;\n}\n\ndeclare namespace PermissionConfig {\n  interface Data {\n    roles: { [Key in Exclude<keyof typeof foundry.CONST['USER_ROLES'], 'NONE'>]: `USER.Role${Titlecase<Key>}` };\n    permissions: ReturnType<PermissionConfig['_getPermissions']>;\n  }\n\n  type FormData = Record<string, boolean>;\n\n  interface Permission extends foundry.CONST.UserCapability {\n    id: string;\n    roles: Permission.Role[];\n  }\n\n  namespace Permission {\n    interface Role {\n      name: string;\n      value: boolean;\n      disabled: boolean;\n    }\n  }\n}\n"
    ]
  