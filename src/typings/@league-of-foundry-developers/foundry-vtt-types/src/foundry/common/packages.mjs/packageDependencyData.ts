
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\packages.mjs\\packageDependencyData.d.ts",
      "import { FieldReturnType, PropertiesToSource } from '../../../types/helperTypes';\nimport { DocumentData } from '../abstract/module.mjs';\nimport * as fields from '../data/fields.mjs';\n\ninterface PackageDependencyDataSchema extends DocumentSchema {\n  name: fields.RequiredString;\n  type: FieldReturnType<\n    fields.RequiredString,\n    {\n      default: 'module';\n      validate: (v: unknown) => boolean;\n      validationError: 'Invalid package type \"{value}\" which must be a value from CONST.PACKAGE_TYPES';\n    }\n  >;\n  manifest: fields.StringField;\n}\n\ninterface PackageDependencyDataProperties {\n  /** The dependency package name */\n  name: string;\n\n  /**\n   * The dependency package type, from CONST.PACKAGE_TYPES\n   * @defaultValue `\"module\"`\n   */\n  type: foundry.CONST.PACKAGE_TYPES;\n\n  /** An explicit manifest URL, otherwise learned from the Foundry web server */\n  manifest: string | undefined;\n}\n\ninterface PackageDependencyDataConstructorData {\n  /** The dependency package name */\n  name: string;\n\n  /**\n   * The dependency package type, from CONST.PACKAGE_TYPES\n   * @defaultValue `\"module\"`\n   */\n  type?: foundry.CONST.PACKAGE_TYPES | null | undefined;\n\n  /** An explicit manifest URL, otherwise learned from the Foundry web server */\n  manifest?: string | null | undefined;\n}\n\ntype PackageDependencyDataSource = PropertiesToSource<PackageDependencyDataProperties>;\n\n/**\n * An inner data object which represents a single package dependency in the dependencies array.\n */\nexport class PackageDependencyData extends DocumentData<\n  PackageDependencyDataSchema,\n  PackageDependencyDataProperties,\n  PackageDependencyDataSource,\n  PackageDependencyDataConstructorData\n> {\n  static override defineSchema(): PackageDependencyDataSchema;\n\n  protected override _getMissingFieldErrorMessage(name: string, field: DocumentField<unknown>): string;\n\n  protected override _getInvalidFieldValueErrorMessage(\n    name: string,\n    field: DocumentField<unknown>,\n    value: unknown\n  ): string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PackageDependencyData extends PackageDependencyDataProperties {}\n"
    ]
  