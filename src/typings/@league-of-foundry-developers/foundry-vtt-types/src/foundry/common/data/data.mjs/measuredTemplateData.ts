
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\measuredTemplateData.d.ts",
      "import {\n  ConfiguredDocumentClass,\n  ConfiguredFlags,\n  FieldReturnType,\n  PropertiesToSource\n} from '../../../../types/helperTypes';\nimport { DocumentData } from '../../abstract/module.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\n\ninterface MeasuredTemplateDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  user: fields.ForeignDocumentField<{ type: typeof documents.BaseUser; required: true }>;\n  t: DocumentField<typeof foundry.CONST.MEASURED_TEMPLATE_TYPES> & {\n    type: typeof String;\n    required: true;\n    default: typeof foundry.CONST.MEASURED_TEMPLATE_TYPES.CIRCLE;\n    validate: (t: unknown) => t is typeof foundry.CONST.MEASURED_TEMPLATE_TYPES;\n    validationError: 'Invalid {name} {field} which must be a value in CONST.MEASURED_TEMPLATE_TYPES';\n  };\n  x: fields.RequiredNumber;\n  y: fields.RequiredNumber;\n  distance: FieldReturnType<fields.RequiredPositiveNumber, { default: 1; validate: (n: number) => boolean }>;\n  direction: FieldReturnType<fields.AngleField, { default: 0 }>;\n  angle: fields.AngleField;\n  width: FieldReturnType<fields.RequiredPositiveNumber, { default: 1 }>;\n  borderColor: FieldReturnType<fields.ColorField, { required: true; default: '#000000' }>;\n  fillColor: FieldReturnType<fields.ColorField, { required: true; default: '#FF0000' }>;\n  texture: fields.VideoField;\n  flags: fields.ObjectField;\n}\n\ninterface MeasuredTemplateDataProperties {\n  /**\n   * The _id which uniquely identifies this BaseMeasuredTemplate embedded document\n   * @defaultValue `null`\n   */\n  _id: string | null;\n\n  user: string | null;\n\n  /**\n   * The value in CONST.MEASURED_TEMPLATE_TYPES which defines the geometry type of this template\n   * @defaultValue `foundry.CONST.MEASURED_TEMPLATE_TYPES.CIRCLE`\n   */\n  t: foundry.CONST.MEASURED_TEMPLATE_TYPES;\n\n  /**\n   * The x-coordinate position of the origin of the template effect\n   * @defaultValue `0`\n   */\n  x: number;\n\n  /**\n   * The y-coordinate position of the origin of the template effect\n   * @defaultValue `0`\n   */\n  y: number;\n\n  /**\n   * The distance of the template effect\n   * @defaultValue `1`\n   */\n  distance: number;\n\n  /**\n   * The angle of rotation for the measured template\n   * @defaultValue `0`\n   */\n  direction: number;\n\n  /**\n   * The angle of effect of the measured template, applies to cone types\n   * @defaultValue `360`\n   */\n  angle: number;\n\n  /**\n   * The width of the measured template, applies to ray types\n   * @defaultValue `1`\n   */\n  width: number;\n\n  /**\n   * A color string used to tint the border of the template shape\n   * @defaultValue `'#000000'`\n   */\n  borderColor: string | null;\n\n  /**\n   * A color string used to tint the fill of the template shape\n   * @defaultValue `'#FF0000'`\n   */\n  fillColor: string | null;\n\n  /**\n   * A repeatable tiling texture used to add a texture fill to the template shape\n   */\n  texture: string | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'MeasuredTemplate'>;\n}\n\ninterface MeasuredTemplateDataConstructorData {\n  /**\n   * The _id which uniquely identifies this BaseMeasuredTemplate embedded document\n   * @defaultValue `null`\n   */\n  _id?: string | null | undefined;\n\n  user?: InstanceType<ConfiguredDocumentClass<typeof documents.BaseUser>> | string | null | undefined;\n\n  /**\n   * The value in CONST.MEASURED_TEMPLATE_TYPES which defines the geometry type of this template\n   * @defaultValue `foundry.CONST.MEASURED_TEMPLATE_TYPES.CIRCLE`\n   */\n  t?: foundry.CONST.MEASURED_TEMPLATE_TYPES | null | undefined;\n\n  /**\n   * The x-coordinate position of the origin of the template effect\n   * @defaultValue `0`\n   */\n  x?: number | null | undefined;\n\n  /**\n   * The y-coordinate position of the origin of the template effect\n   * @defaultValue `0`\n   */\n  y?: number | null | undefined;\n\n  /**\n   * The distance of the template effect\n   * @defaultValue `1`\n   */\n  distance?: number | null | undefined;\n\n  /**\n   * The angle of rotation for the measured template\n   * @defaultValue `0`\n   */\n  direction?: number | null | undefined;\n\n  /**\n   * The angle of effect of the measured template, applies to cone types\n   * @defaultValue `360`\n   */\n  angle?: number | null | undefined;\n\n  /**\n   * The width of the measured template, applies to ray types\n   * @defaultValue `1`\n   */\n  width?: number | null | undefined;\n\n  /**\n   * A color string used to tint the border of the template shape\n   * @defaultValue `'#000000'`\n   */\n  borderColor?: string | null | undefined;\n\n  /**\n   * A color string used to tint the fill of the template shape\n   * @defaultValue `'#FF0000'`\n   */\n  fillColor?: string | null | undefined;\n\n  /**\n   * A repeatable tiling texture used to add a texture fill to the template shape\n   */\n  texture?: string | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'MeasuredTemplate'> | null | undefined;\n}\n\ntype MeasuredTemplateDataSource = PropertiesToSource<MeasuredTemplateDataProperties>;\n\n/**\n * The data schema for a MeasuredTemplate embedded document.\n * @see BaseMeasuredTemplate\n */\nexport class MeasuredTemplateData extends DocumentData<\n  MeasuredTemplateDataSchema,\n  MeasuredTemplateDataProperties,\n  MeasuredTemplateDataSource,\n  MeasuredTemplateDataConstructorData,\n  documents.BaseMeasuredTemplate\n> {\n  /**\n   * @remarks This override does not exist in foundry but is added here to prepend runtime errors.\n   */\n  constructor(\n    data: MeasuredTemplateDataConstructorData | undefined,\n    document: InstanceType<ConfiguredDocumentClass<typeof foundry.documents.BaseScene>>\n  );\n\n  static override defineSchema(): MeasuredTemplateDataSchema;\n\n  protected override _initialize(): void;\n\n  protected override _validateDocument(): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MeasuredTemplateData extends MeasuredTemplateDataProperties {}\n"
    ]
  