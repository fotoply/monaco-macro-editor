
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\pixi\\webgl\\base.d.ts",
      "/**\n * This class defines an interface which all shaders utilize\n */\ndeclare abstract class AbstractBaseShader extends PIXI.Shader {\n  /** The current uniforms of the Shader */\n  uniforms: AbstractBaseShader.Uniforms;\n\n  constructor(program: PIXI.Program, uniforms: AbstractBaseShader.Uniforms);\n\n  /**\n   * The initial default values of shader uniforms\n   */\n  protected _defaults: AbstractBaseShader.Uniforms;\n\n  /**\n   * The raw vertex shader used by this class.\n   * A subclass of AbstractBaseShader must implement the vertexShader static field.\n   * @defaultValue `\"\"`\n   *\n   * @remarks This is abstract, subclasses must implement it.\n   */\n  static vertexShader: string;\n\n  /**\n   * The raw fragment shader used by this class.\n   * A subclass of AbstractBaseShader must implement the fragmentShader static field.\n   * @defaultValue `\"\"`\n   *\n   * @remarks This is abstract, subclasses must implement it.\n   */\n  static fragmentShader: string;\n\n  /**\n   * The default uniform values for the shader.\n   * A subclass of AbstractBaseShader must implement the defaultUniforms static field.\n   * @defaultValue `{}`\n   *\n   * @remarks This is abstract, subclasses must implement it.\n   */\n  static defaultUniforms: AbstractBaseShader.Uniforms;\n\n  /**\n   * A factory method for creating the shader using its defined default values\n   */\n  static create<T extends AbstractBaseShader>(this: ConstructorOf<T>, defaultUniforms?: AbstractBaseShader.Uniforms): T;\n\n  /**\n   * Reset the shader uniforms back to their provided default values\n   * @internal\n   */\n  protected reset(): void;\n}\n\ndeclare namespace AbstractBaseShader {\n  type UniformValue =\n    | boolean\n    | number\n    | Int32List\n    | Float32List\n    | { x: number; y: number }\n    | { x: number; y: number; z: number }\n    | { x: number; y: number; z: number; w: number }\n    | { x: number; y: number }[]\n    | { x: number; y: number; z: number }[]\n    | { x: number; y: number; z: number; w: number }[]\n    | PIXI.Texture;\n\n  type Uniforms = Record<string, AbstractBaseShader.UniformValue>;\n}\n"
    ]
  