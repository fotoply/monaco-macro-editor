
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\tileData.d.ts",
      "import { ConfiguredFlags, FieldReturnType, PropertiesToSource } from '../../../../types/helperTypes';\nimport DocumentData from '../../abstract/data.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\nimport { TileOcclusion, TileOcclusionConstructorData } from './tileOcclusion';\nimport { VideoData, VideoDataConstructorData } from './videoData';\n\ninterface TileDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  img: fields.VideoField;\n  width: fields.RequiredNumber;\n  height: fields.RequiredNumber;\n  x: fields.RequiredNumber;\n  y: fields.RequiredNumber;\n  z: FieldReturnType<fields.IntegerField, { required: true; default: 100 }>;\n  rotation: FieldReturnType<fields.AngleField, { default: 0 }>;\n  alpha: fields.AlphaField;\n  tint: fields.ColorField;\n  hidden: fields.BooleanField;\n  locked: fields.BooleanField;\n  overhead: FieldReturnType<fields.BooleanField, { default: false }>;\n  occlusion: DocumentField<TileOcclusion> & {\n    type: typeof TileOcclusion;\n    required: false;\n    default: Record<string, never>;\n  };\n  video: DocumentField<VideoData> & {\n    type: typeof VideoData;\n    required: false;\n    default: Record<string, never>;\n  };\n  flags: fields.ObjectField;\n}\n\ninterface TileDataProperties {\n  /**\n   * The _id which uniquely identifies this Tile embedded document\n   * @defaultValue `null`\n   */\n  _id: string | null;\n\n  /**\n   * An image or video file path which this tile displays\n   */\n  img: string | null | undefined;\n\n  /**\n   * The pixel width of the tile\n   * @defaultValue `0`\n   */\n  width: number;\n\n  /**\n   * The pixel height of the tile\n   * @defaultValue `0`\n   */\n  height: number;\n\n  /**\n   * The x-coordinate position of the top-left corner of the tile\n   * @defaultValue `0`\n   */\n  x: number;\n\n  /**\n   * The y-coordinate position of the top-left corner of the tile\n   * @defaultValue `0`\n   */\n  y: number;\n\n  /**\n   * The z-index ordering of this tile relative to its siblings\n   * @defaultValue `100`\n   */\n  z: number;\n\n  /**\n   * The angle of rotation for the tile between 0 and 360\n   * @defaultValue `0`\n   */\n  rotation: number;\n\n  /**\n   * The tile opacity\n   * @defaultValue `1`\n   */\n  alpha: number;\n\n  /**\n   * A color to tint the tile\n   */\n  tint: string | null | undefined;\n\n  /**\n   * Is the tile currently hidden?\n   * @defaultValue `false`\n   */\n  hidden: boolean;\n\n  /**\n   * Is the tile currently locked?\n   * @defaultValue `false`\n   */\n  locked: boolean;\n\n  /**\n   * Is the tile an overhead tile?\n   * @defaultValue `false`\n   */\n  overhead: boolean;\n\n  /**\n   * The tile's occlusion settings\n   * @defaultValue `new TileOcclusion({})`\n   */\n  occlusion: TileOcclusion;\n\n  /**\n   * The tile's video settings\n   * @defaultValue `new VideoData({})`\n   */\n  video: VideoData;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'Tile'>;\n}\n\ninterface TileDataConstructorData {\n  /**\n   * The _id which uniquely identifies this Tile embedded document\n   * @defaultValue `null`\n   */\n  _id?: string | null | undefined;\n\n  /**\n   * An image or video file path which this tile displays\n   */\n  img?: string | null | undefined;\n\n  /**\n   * The pixel width of the tile\n   * @defaultValue `0`\n   */\n  width?: number | null | undefined;\n\n  /**\n   * The pixel height of the tile\n   * @defaultValue `0`\n   */\n  height?: number | null | undefined;\n\n  /**\n   * The x-coordinate position of the top-left corner of the tile\n   * @defaultValue `0`\n   */\n  x?: number | null | undefined;\n\n  /**\n   * The y-coordinate position of the top-left corner of the tile\n   * @defaultValue `0`\n   */\n  y?: number | null | undefined;\n\n  /**\n   * The z-index ordering of this tile relative to its siblings\n   * @defaultValue `100`\n   */\n  z?: number | null | undefined;\n\n  /**\n   * The angle of rotation for the tile between 0 and 360\n   * @defaultValue `0`\n   */\n  rotation?: number | null | undefined;\n\n  /**\n   * The tile opacity\n   * @defaultValue `1`\n   */\n  alpha?: number | null | undefined;\n\n  /**\n   * A color to tint the tile\n   */\n  tint?: string | null | undefined;\n\n  /**\n   * Is the tile currently hidden?\n   * @defaultValue `false`\n   */\n  hidden?: boolean | null | undefined;\n\n  /**\n   * Is the tile currently locked?\n   * @defaultValue `false`\n   */\n  locked?: boolean | null | undefined;\n\n  /**\n   * Is the tile an overhead tile?\n   * @defaultValue `false`\n   */\n  overhead?: boolean | null | undefined;\n\n  /**\n   * The tile's occlusion settings\n   * @defaultValue `new TileOcclusion({})`\n   */\n  occlusion?: TileOcclusionConstructorData | null | undefined;\n\n  /**\n   * The tile's video settings\n   * @defaultValue `new VideoData({})`\n   */\n  video?: VideoDataConstructorData | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'Tile'> | null | undefined;\n}\n\ntype TileDataSource = PropertiesToSource<TileDataProperties>;\n\n/**\n * The data schema for a Tile embedded document.\n * @see BaseTile\n */\nexport class TileData extends DocumentData<\n  TileDataSchema,\n  TileDataProperties,\n  TileDataSource,\n  TileDataConstructorData,\n  documents.BaseTile\n> {\n  static override defineSchema(): TileDataSchema;\n\n  override _initializeSource(data: TileDataConstructorData): TileDataSource;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface TileData extends TileDataProperties {}\n"
    ]
  