
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\placeables\\note-config.d.ts",
      "import type { ConfiguredDocumentClassForName } from '../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single Note document within a parent Scene.\n   * @typeParam Options - the type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class NoteConfig<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends object = NoteConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'Note'>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   title: game.i18n.localize(\"NOTE.ConfigTitle\"),\n     *   template: \"templates/scene/note-config.html\",\n     *   width: 400,\n     * })\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n\n    override getData(options?: Partial<Options>): Data | Promise<Data>;\n\n    protected override _updateObject(event: Event, formData: NoteConfig.FormData): Promise<unknown>;\n\n    override close(options?: Application.CloseOptions): Promise<void>;\n  }\n\n  namespace NoteConfig {\n    interface Data<Options extends DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'Note'>>, Options> {\n      entry: ConfiguredDocumentClassForName<'JournalEntry'> | {};\n      entries: Journal['contents'];\n      icons: CONFIG['JournalEntry']['noteIcons'];\n      fontFamilies: Record<string, string>;\n      textAnchors: Record<foundry.CONST.TEXT_ANCHOR_POINTS, string>;\n      submitText: string;\n    }\n\n    interface FormData {\n      entryId: string;\n      fontFamily: string;\n      fontSize: number | null;\n      icon: string;\n      iconSize: number | null;\n      iconTint: string;\n      text: string;\n      textAnchor: foundry.CONST.TEXT_ANCHOR_POINTS;\n      textColor: string;\n      x: number | null;\n      y: number | null;\n    }\n  }\n}\n"
    ]
  