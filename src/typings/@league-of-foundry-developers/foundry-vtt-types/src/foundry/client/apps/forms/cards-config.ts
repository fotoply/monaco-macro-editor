
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\forms\\cards-config.d.ts",
      "import type { ConfiguredDocumentClassForName } from '../../../../types/helperTypes.js';\n\ndeclare global {\n  /**\n   * A DocumentSheet application responsible for displaying and editing a single Cards stack.\n   *\n   * @typeParam Options - The type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class CardsConfig<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends CardsConfig.Data<Options> = CardsConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'Cards'>>> {\n    constructor(object: ConfiguredDocumentClassForName<'Cards'>, options: Options);\n\n    /**\n     * The sorting mode used to display the sheet, \"standard\" if true, otherwise \"shuffled\"\n     * @internal\n     * @defaultValue `false`\n     */\n    protected _sortStandard: boolean;\n\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   classes: [\"sheet\", \"cards-config\"],\n     *   template: \"templates/cards/cards-deck.html\",\n     *   width: 620,\n     *   height: \"auto\",\n     *   closeOnSubmit: false,\n     *   viewPermission: CONST.DOCUMENT_PERMISSION_LEVELS.OBSERVER,\n     *   dragDrop: [{dragSelector: \"ol.cards li.card\", dropSelector: \"ol.cards\"}],\n     *   tabs: [{navSelector: \".tabs\", contentSelector: \"form\", initial: \"cards\"}],\n     *   scrollY: [\"ol.cards\"]\n     * })\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n\n    override getData(options?: Partial<Options>): Data | Promise<Data>;\n\n    override activateListeners(html: JQuery): void;\n\n    /**\n     * Handle card control actions which modify single cards on the sheet.\n     * @param event - The originating click event\n     * @returns A Promise which resolves once the handler has completed\n     */\n    protected _onCardControl(event: JQuery.ClickEvent): Promise<void>;\n\n    /**\n     * Handle lazy-loading card face images.\n     * See {@link SidebarTab#_onLazyLoadImage}\n     */\n    protected _onLazyLoadImage(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;\n\n    protected override _canDragStart(selector: string): boolean;\n\n    protected override _onDragStart(event: DragEvent): void;\n\n    protected override _canDragDrop(selector: string): boolean;\n\n    protected override _onDrop(event: DragEvent): void;\n\n    /**\n     * Handle sorting a Card relative to other siblings within this document\n     * @param event - The drag drop event\n     * @param card  - The card being dragged\n     * @internal\n     */\n    protected _onSortCard(\n      event: DragEvent,\n      card: InstanceType<ConfiguredDocumentClassForName<'Card'>>\n    ): ReturnType<InstanceType<ConfiguredDocumentClassForName<'Cards'>>['updateEmbeddedDocuments']>;\n  }\n\n  /**\n   * A subclass of CardsConfig which provides a sheet representation for Cards documents with the \"hand\" type.\n   *\n   * @typeParam Options - The type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class CardsHand<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends CardsConfig.Data<Options> = CardsConfig.Data<Options>\n  > extends CardsConfig<Options, Data> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   template: \"templates/cards/cards-hand.html\"\n     * })\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n  }\n\n  /**\n   * A subclass of CardsConfig which provides a sheet representation for Cards documents with the \"pile\" type.\n   *\n   * @typeParam Options - The type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class CardsPile<\n    Options extends DocumentSheetOptions = DocumentSheetOptions,\n    Data extends CardsConfig.Data<Options> = CardsConfig.Data<Options>\n  > extends CardsConfig<Options, Data> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   template: \"templates/cards/cards-pile.html\"\n     * })\n     * ```\n     */\n    static override get defaultOptions(): DocumentSheetOptions;\n  }\n\n  namespace CardsConfig {\n    interface Data<Options extends DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'Cards'>>, Options> {\n      cards: InstanceType<ConfiguredDocumentClassForName<'Card'>>[];\n      types: Record<string, string>;\n      inCompendium: boolean;\n    }\n  }\n}\n"
    ]
  