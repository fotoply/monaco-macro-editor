
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\pixi\\layers\\grid\\square.d.ts",
      "/**\n * Construct a square grid container\n */\ndeclare class SquareGrid extends BaseGrid {\n  override draw(preview?: BaseGrid.Preview | undefined): this;\n\n  /** @internal */\n  protected _drawLine(\n    points: [x1: number, y1: number, x2: number, y2: number],\n    lineColor: number,\n    lineAlpha: number\n  ): PIXI.Graphics;\n\n  override getCenter(x: number, y: number): PointArray;\n\n  override getGridPositionFromPixels(x: number, y: number): PointArray;\n\n  override getPixelsFromGridPosition(row: number, col: number): PointArray;\n\n  /**\n   * @param interval - (default: `1`)\n   */\n  override getSnappedPosition(x: number, y: number, interval?: number | null): { x: number; y: number };\n\n  /**\n   * Shift a pixel position [x,y] by some number of grid units dx and dy\n   * @param x  - The starting x-coordinate in pixels\n   * @param y  - The starting y-coordinate in pixels\n   * @param dx - The number of grid positions to shift horizontally\n   * @param dy - The number of grid positions to shift vertically\n   */\n  shiftPosition(x: number, y: number, dx: number, dy: number): PointArray;\n\n  /** @internal */\n  protected _getNearestVertex(x: number, y: number): PointArray;\n\n  /**\n   * @param options - (default: `{}`)\n   */\n  override highlightGridPosition(layer: GridHighlight, options?: BaseGrid.HighlightGridPositionOptions): void;\n\n  /**\n   * @param options - (default: `{}`)\n   */\n  override measureDistances(segments: GridLayer.Segment[], options?: MeasureDistancesOptions): number[];\n\n  override getNeighbors(row: number, col: number): PointArray[];\n}\n"
    ]
  