
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\data\\data.mjs\\rollTableData.d.ts",
      "import {\n  ConfiguredDocumentClass,\n  ConfiguredFlags,\n  FieldReturnType,\n  PropertiesToSource\n} from '../../../../types/helperTypes';\nimport EmbeddedCollection from '../../abstract/embedded-collection.mjs';\nimport { DocumentData } from '../../abstract/module.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\n\ninterface RollTableDataSchema extends DocumentSchema {\n  _id: fields.DocumentId;\n  name: fields.RequiredString;\n  img: FieldReturnType<fields.ImageField, { default: () => typeof RollTableData.DEFAULT_ICON }>;\n  description: fields.StringField;\n  results: fields.EmbeddedCollectionField<typeof documents.BaseTableResult>;\n  formula: fields.StringField;\n  replacement: FieldReturnType<fields.BooleanField, { default: true }>;\n  displayRoll: FieldReturnType<fields.BooleanField, { default: true }>;\n  folder: fields.ForeignDocumentField<{ type: typeof documents.BaseFolder }>;\n  sort: fields.IntegerSortField;\n  permission: fields.DocumentPermissions;\n  flags: fields.ObjectField;\n}\n\ninterface RollTableDataProperties {\n  /**\n   * The _id which uniquely identifies this RollTable document\n   * @defaultValue `null`\n   */\n  _id: string | null;\n\n  /**\n   * The name of this RollTable\n   */\n  name: string;\n\n  /**\n   * An image file path which provides the thumbnail artwork for this RollTable\n   * @defaultValue `RollTableData.DEFAULT_ICON`\n   */\n  img: string;\n\n  /**\n   * The HTML text description for this RollTable document\n   */\n  description: string | undefined;\n\n  /**\n   * A Collection of TableResult embedded documents which belong to this RollTable\n   * @defaultValue `new EmbeddedCollection(TableResultData, [], BaseTableResult.implementation)`\n   */\n  results: EmbeddedCollection<ConfiguredDocumentClass<typeof documents.BaseTableResult>, RollTableData>;\n\n  /**\n   * The Roll formula which determines the results chosen from the table\n   */\n  formula: string | undefined;\n\n  /**\n   * Are results from this table drawn with replacement?\n   * @defaultValue `true`\n   */\n  replacement: boolean;\n\n  /**\n   * Is the Roll result used to draw from this RollTable displayed in chat?\n   * @defaultValue `true`\n   */\n  displayRoll: boolean;\n\n  /**\n   * The _id of a Folder which contains this RollTable\n   */\n  folder: string | null;\n\n  /**\n   * The numeric sort value which orders this RollTable relative to its siblings\n   * @defaultValue `0`\n   */\n  sort: number;\n\n  /**\n   * An object which configures user permissions to this RollTable\n   * @defaultValue `{ default: CONST.ENTITY_PERMISSIONS.NONE }`\n   */\n  permission: Partial<Record<string, foundry.CONST.DOCUMENT_PERMISSION_LEVELS>>;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'RollTable'>;\n}\n\ninterface RollTableDataConstructorData {\n  /**\n   * The _id which uniquely identifies this RollTable document\n   */\n  _id?: string | null | undefined;\n\n  /**\n   * The name of this RollTable\n   */\n  name: string;\n\n  /**\n   * An image file path which provides the thumbnail artwork for this RollTable\n   * @defaultValue `RollTableData.DEFAULT_ICON`\n   */\n  img?: string | null | undefined;\n\n  /**\n   * The HTML text description for this RollTable document\n   */\n  description?: string | null | undefined;\n\n  /**\n   * A Collection of TableResult embedded documents which belong to this RollTable\n   * @defaultValue `new EmbeddedCollection(TableResultData, [], BaseTableResult.implementation)`\n   */\n  results?: ConstructorParameters<ConfiguredDocumentClass<typeof documents.BaseTableResult>>[0][] | null | undefined;\n\n  /**\n   * The Roll formula which determines the results chosen from the table\n   */\n  formula?: string | null | undefined;\n\n  /**\n   * Are results from this table drawn with replacement?\n   * @defaultValue `true`\n   */\n  replacement?: boolean | null | undefined;\n\n  /**\n   * Is the Roll result used to draw from this RollTable displayed in chat?\n   * @defaultValue `true`\n   */\n  displayRoll?: boolean | null | undefined;\n\n  /**\n   * The _id of a Folder which contains this RollTable\n   */\n  folder?: InstanceType<ConfiguredDocumentClass<typeof documents.BaseFolder>> | string | null | undefined;\n\n  /**\n   * The numeric sort value which orders this RollTable relative to its siblings\n   */\n  sort?: number | null | undefined;\n\n  /**\n   * An object which configures user permissions to this RollTable\n   * @defaultValue `{ default: CONST.ENTITY_PERMISSIONS.NONE }`\n   */\n  permission?: Partial<Record<string, foundry.CONST.DOCUMENT_PERMISSION_LEVELS>> | null | undefined;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'RollTable'> | null | undefined;\n}\n\ntype RollTableDataSource = PropertiesToSource<RollTableDataProperties>;\n\n/**\n * The data schema for an RollTable document.\n * @see BaseRollTable\n */\nexport class RollTableData extends DocumentData<\n  RollTableDataSchema,\n  RollTableDataProperties,\n  RollTableDataSource,\n  RollTableDataConstructorData,\n  documents.BaseRollTable\n> {\n  static override defineSchema(): RollTableDataSchema;\n\n  /**\n   * The default icon used for newly created Macro documents\n   * @remarks Incorrect description, really for the RollTables.\n   * @defaultValue `'icons/svg/d20-grey.svg'`\n   */\n  static DEFAULT_ICON: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface RollTableData extends RollTableDataProperties {}\n"
    ]
  