
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\client\\apps\\placeables\\sound-config.d.ts",
      "import type { ConfiguredDocumentClassForName } from '../../../../types/helperTypes';\nimport type { AmbientSoundDataConstructorData } from '../../../common/data/data.mjs/ambientSoundData';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single AmbientSound document within a parent Scene.\n   * @typeParam Options - the type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class AmbientSoundConfig<\n    Options extends DocumentSheetOptions = AmbientSoundConfig.Options,\n    Data extends object = AmbientSoundConfig.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClassForName<'AmbientSound'>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   title: \"SOUND.ConfigTitle\",\n     *   template: \"templates/scene/sound-config.html\",\n     *   width: 480\n     * });\n     * ```\n     */\n    static get defaultOptions(): DocumentSheetOptions;\n\n    override get title(): string;\n\n    override getData(options?: Partial<Options>): Promise<Data> | Data;\n\n    protected override _updateObject(event: Event, formData: AmbientSoundConfig.FormData): Promise<unknown>;\n\n    override close(options?: Application.CloseOptions): Promise<void>;\n  }\n\n  namespace AmbientSoundConfig {\n    interface Data<Options extends DocumentSheetOptions>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClassForName<'AmbientSound'>>, Options> {\n      submitText: string;\n      gridUnits: string;\n    }\n\n    type FormData = Pick<foundry.data.AmbientSoundData, 'easing' | 'path' | 'volume'> &\n      Pick<AmbientSoundDataConstructorData, 'radius' | 'x' | 'y'>;\n\n    type Options = DocumentSheetOptions;\n  }\n}\n"
    ]
  