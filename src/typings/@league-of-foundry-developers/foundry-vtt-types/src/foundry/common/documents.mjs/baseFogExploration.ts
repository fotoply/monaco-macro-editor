
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\common\\documents.mjs\\baseFogExploration.d.ts",
      "import { DocumentMetadata, DocumentModificationOptions } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport * as data from '../data/data.mjs';\nimport type { FogExplorationDataConstructorData } from '../data/data.mjs/fogExplorationData';\nimport { BaseUser } from './baseUser';\n\ntype FogExplorationMetadata = Merge<\n  DocumentMetadata,\n  {\n    name: 'FogExploration';\n    collection: 'fog';\n    label: 'DOCUMENT.FogExploration';\n    labelPlural: 'DOCUMENT.FogExplorations';\n    isPrimary: true;\n    permissions: {\n      create: 'PLAYER';\n      update: (user: BaseUser, doc: BaseFogExploration) => boolean;\n      delete: (user: BaseUser, doc: BaseFogExploration) => boolean;\n    };\n  }\n>;\n\n/**\n * The base FogExploration model definition which defines common behavior of an FogExploration document between both client and server.\n */\nexport declare class BaseFogExploration extends Document<data.FogExplorationData, null, FogExplorationMetadata> {\n  static override get schema(): typeof data.FogExplorationData;\n\n  static override get metadata(): FogExplorationMetadata;\n\n  protected override _preUpdate(\n    changed: DeepPartial<FogExplorationDataConstructorData>,\n    options: DocumentModificationOptions,\n    user: BaseUser\n  ): Promise<void>;\n\n  /**\n   * Test whether a User can modify a FogExploration document.\n   */\n  protected static _canUserModify(user: BaseUser, doc: BaseFogExploration): boolean;\n}\n"
    ]
  